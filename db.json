{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/download/Elaina.zip","path":"download/Elaina.zip","modified":1,"renderable":0},{"_id":"themes/async/source/failure.ico","path":"failure.ico","modified":1,"renderable":1},{"_id":"themes/async/source/sw.js","path":"sw.js","modified":1,"renderable":1},{"_id":"themes/async/source/css/index.less","path":"css/index.less","modified":1,"renderable":1},{"_id":"themes/async/source/img/1081225.mp4","path":"img/1081225.mp4","modified":1,"renderable":1},{"_id":"themes/async/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/645b94740d2dde5777b50a12.png","path":"img/645b94740d2dde5777b50a12.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/avatar.jpg","path":"img/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/banner.png","path":"img/banner.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/bannnnner.jpg","path":"img/bannnnner.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/block.jpg","path":"img/block.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/cpp.png","path":"img/cpp.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/csp.jpeg","path":"img/csp.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/deepin.png","path":"img/deepin.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/favicon.svg","path":"img/favicon.svg","modified":1,"renderable":1},{"_id":"themes/async/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/async/source/img/kmp.png","path":"img/kmp.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/php.jpg","path":"img/php.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/simple-luogu.jpg","path":"img/simple-luogu.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/tj.jpg","path":"img/tj.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/xianhua.jpeg","path":"img/xianhua.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/国产系统Deepin20初体验.jpg","path":"img/国产系统Deepin20初体验.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/晚上.mp4","path":"img/晚上.mp4","modified":1,"renderable":1},{"_id":"themes/async/source/img/树链剖分学习笔记.jpg","path":"img/树链剖分学习笔记.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/async/source/css/plugins/bootstrap.min.css","path":"css/plugins/bootstrap.min.css","modified":1,"renderable":1},{"_id":"themes/async/source/css/plugins/bootstrap.row.css","path":"css/plugins/bootstrap.row.css","modified":1,"renderable":1},{"_id":"themes/async/source/css/plugins/font-awesome.min.css","path":"css/plugins/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/async/source/fonts/webfonts/fa-brands-400.woff2","path":"fonts/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/async/source/fonts/webfonts/fa-regular-400.woff2","path":"fonts/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/async/source/fonts/webfonts/fa-solid-900.woff2","path":"fonts/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina.png","path":"img/Elaina/Elaina.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina1.jpeg","path":"img/Elaina/Elaina1.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina10.jpeg","path":"img/Elaina/Elaina10.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina11.jpg","path":"img/Elaina/Elaina11.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina12.png","path":"img/Elaina/Elaina12.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina13.jpeg","path":"img/Elaina/Elaina13.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina14.jpg","path":"img/Elaina/Elaina14.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina15.png","path":"img/Elaina/Elaina15.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina16.jpeg","path":"img/Elaina/Elaina16.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina17.jpg","path":"img/Elaina/Elaina17.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina18.png","path":"img/Elaina/Elaina18.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina19.jpeg","path":"img/Elaina/Elaina19.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina2.jpg","path":"img/Elaina/Elaina2.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina20.jpg","path":"img/Elaina/Elaina20.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina21.jpeg","path":"img/Elaina/Elaina21.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina22.jpg","path":"img/Elaina/Elaina22.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina23.jpg","path":"img/Elaina/Elaina23.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina24.jpg","path":"img/Elaina/Elaina24.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina3.png","path":"img/Elaina/Elaina3.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina4.jpeg","path":"img/Elaina/Elaina4.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina5.jpg","path":"img/Elaina/Elaina5.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina6.png","path":"img/Elaina/Elaina6.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina7.jpeg","path":"img/Elaina/Elaina7.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina8.jpg","path":"img/Elaina/Elaina8.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina/Elaina9.png","path":"img/Elaina/Elaina9.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina.png","path":"img/Elaina-lazy/Elaina.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina1.jpeg","path":"img/Elaina-lazy/Elaina1.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina10.jpeg","path":"img/Elaina-lazy/Elaina10.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina11.jpg","path":"img/Elaina-lazy/Elaina11.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina12.png","path":"img/Elaina-lazy/Elaina12.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina13.jpeg","path":"img/Elaina-lazy/Elaina13.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina14.jpg","path":"img/Elaina-lazy/Elaina14.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina15.png","path":"img/Elaina-lazy/Elaina15.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina16.jpeg","path":"img/Elaina-lazy/Elaina16.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina17.jpg","path":"img/Elaina-lazy/Elaina17.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina18.png","path":"img/Elaina-lazy/Elaina18.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina19.jpeg","path":"img/Elaina-lazy/Elaina19.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina2.jpg","path":"img/Elaina-lazy/Elaina2.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina20.jpg","path":"img/Elaina-lazy/Elaina20.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina21.jpeg","path":"img/Elaina-lazy/Elaina21.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina22.jpg","path":"img/Elaina-lazy/Elaina22.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina23.jpg","path":"img/Elaina-lazy/Elaina23.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina24.jpg","path":"img/Elaina-lazy/Elaina24.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina3.png","path":"img/Elaina-lazy/Elaina3.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina4.jpeg","path":"img/Elaina-lazy/Elaina4.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina5.jpg","path":"img/Elaina-lazy/Elaina5.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina6.png","path":"img/Elaina-lazy/Elaina6.png","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina7.jpeg","path":"img/Elaina-lazy/Elaina7.jpeg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina8.jpg","path":"img/Elaina-lazy/Elaina8.jpg","modified":1,"renderable":1},{"_id":"themes/async/source/img/Elaina-lazy/Elaina9.png","path":"img/Elaina-lazy/Elaina9.png","modified":1,"renderable":1},{"_id":"themes/async/source/js/plugins/danmu.js","path":"js/plugins/danmu.js","modified":1,"renderable":1},{"_id":"themes/async/source/js/plugins/local_search.js","path":"js/plugins/local_search.js","modified":1,"renderable":1},{"_id":"themes/async/source/js/plugins/typing.js","path":"js/plugins/typing.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"4d537c49406a4d91048ab57d39cfbaf863fd874c","modified":1686662397648},{"_id":"source/CNAME","hash":"ccdf2c1405319c61d93f7bcccfdf077c1af42859","modified":1679055665000},{"_id":"source/_posts/CF1730B题解.md","hash":"56c43a00a13299527cf38d88b45bb0e5016e0302","modified":1720777128279},{"_id":"source/_posts/CSP-2022.md","hash":"e08c1c5515a2a39d46a9d85be80d8ef6e5300f6c","modified":1720777014591},{"_id":"source/_posts/KMP学习笔记.md","hash":"fbdde8e26f64eae92ee272d33ca178efc3339b32","modified":1721293129293},{"_id":"source/_posts/PHP环境.md","hash":"9f708c3f09227be4a7fdcec77402aa302b062d62","modified":1721293095350},{"_id":"source/_posts/Ubuntu更换开机动画.md","hash":"1d7b3c19fb52a15ac663f19689a178dbc34e1cb8","modified":1692704484124},{"_id":"source/_posts/hello-world.md","hash":"4cf7c22dbbc029fc3658349deebd707876a8372b","modified":1720837636352},{"_id":"source/_posts/关于Simple-Luogu.md","hash":"417ec818b88bca8c116ca503bcb79bd045595bd3","modified":1720776996579},{"_id":"source/_posts/国产系统Deepin20初体验.md","hash":"841fb10777c35cff7c894d6b1acd7093c98d7365","modified":1720777019199},{"_id":"source/_posts/扫描线学习笔记.md","hash":"dcb91a28fd1a7d96f2fd734b798f3ddf916244bd","modified":1720777164227},{"_id":"source/_posts/树链剖分学习笔记.md","hash":"432e275bda8c975f63c31f4e933461336c794c4b","modified":1720777004771},{"_id":"source/_posts/闲话11-8.md","hash":"33b2ab1db2aff7a1dfa4b0119553874403582316","modified":1721293271874},{"_id":"source/categories/index.md","hash":"46e690ad0a91b26d5fd70c1984d5eafe1371a450","modified":1721299207579},{"_id":"source/about/index.md","hash":"68c8af0453deca5f6b03eb18ee6f89fb0c1f1f75","modified":1721299867721},{"_id":"source/tags/index.md","hash":"eabdc8ac99889b8a847672d4ad5b0e9340389183","modified":1721299266007},{"_id":"source/links/index.md","hash":"58e6d4890bcd7794eaa595b750af071756b4ff71","modified":1721299299199},{"_id":"source/download/index.md","hash":"fd6af30893d25a359c24869b99f91868e0089594","modified":1692102995693},{"_id":"source/download/Elaina.zip","hash":"e526c92b9ae4eca888399dcae9c50d16ccdcf876","modified":1692102612722},{"_id":"themes/async/package.json","hash":"8333997c167d716dcaac1dc4dca9243d701a76ee","modified":1720686494750},{"_id":"themes/async/languages/en.yml","hash":"84a43a5e8a37e2243512c6e305d9f935a4622beb","modified":499162500000},{"_id":"themes/async/languages/zh-Hans.yml","hash":"82e14d9c19a28abe630205575961201269ea895a","modified":499162500000},{"_id":"themes/async/layout/layout.ejs","hash":"beb7634f08a8b364f4db166fc6eeb3ea064300d4","modified":499162500000},{"_id":"themes/async/_config.yml","hash":"5d8f6f0bb11d2c0d1bace1bd22ee5a15f62d25bd","modified":499162500000},{"_id":"themes/async/scripts/console/plugin.js","hash":"0af4b27cc86549826d24e1908da4aa9966debc14","modified":499162500000},{"_id":"themes/async/layout/404.ejs","hash":"1416ba991457b267229bc4ec9f98540be1893d68","modified":499162500000},{"_id":"themes/async/layout/comment.ejs","hash":"277d6a650ec6d12973565f675da5172c2112413a","modified":499162500000},{"_id":"themes/async/layout/category.ejs","hash":"ae73c38e5f79c5e0db649e02a2ab78e33c92d6a1","modified":499162500000},{"_id":"themes/async/layout/archive.ejs","hash":"2603f3bdf7cf68873e5128d45c2c518fad108837","modified":499162500000},{"_id":"themes/async/layout/about.ejs","hash":"fa4d733a809ddd086175d3445f94c8a9bd0362f6","modified":499162500000},{"_id":"themes/async/scripts/events/config.js","hash":"a2e274fef40ca8fb981b2f0cf09c7b1c727cc93e","modified":499162500000},{"_id":"themes/async/scripts/events/index.js","hash":"18b4e43ac08123bd27ee9619385a9e1d4a0fce0c","modified":499162500000},{"_id":"themes/async/scripts/events/layout.js","hash":"b07fdc3448461ebe1e10288d0be5d5e616e99e1c","modified":499162500000},{"_id":"themes/async/scripts/filters/cdn.js","hash":"b1030d8897da4bee5b66b1d669a2f5f4baee0e06","modified":499162500000},{"_id":"themes/async/scripts/filters/index.js","hash":"eed6ee47e66915776c3eac064cdf3b06ca0cfd8b","modified":499162500000},{"_id":"themes/async/scripts/helper/async_config.js","hash":"e5fc3d52080164ae5ad6d61b2a9950469bbf402b","modified":499162500000},{"_id":"themes/async/scripts/helper/index.js","hash":"16a2b891096c41467eaeb8ece9648e213c8ce837","modified":499162500000},{"_id":"themes/async/scripts/helper/list_archives.js","hash":"7aac0c6da98350cbe28b648b2072a491594867a8","modified":499162500000},{"_id":"themes/async/scripts/helper/list_categories.js","hash":"8a28147c2a0cce315746806673bf5db34fab82f6","modified":499162500000},{"_id":"themes/async/scripts/helper/tag.js","hash":"718f7207db1e1b8db704d83893f2daffdef9278c","modified":499162500000},{"_id":"themes/async/layout/_partial/main.ejs","hash":"63cb1b7baa5b87ae89f15352925df99691c0f2f9","modified":499162500000},{"_id":"themes/async/layout/custom.ejs","hash":"3e019f76171e8f4392942f512b53030ff268e2db","modified":499162500000},{"_id":"themes/async/layout/index.ejs","hash":"49342e779d1dd71df6285d73c755b3870cca1e80","modified":499162500000},{"_id":"themes/async/layout/links.ejs","hash":"c64b58b9bd84495682eadc8b06fe918f05d71da6","modified":499162500000},{"_id":"themes/async/scripts/helper/toc.js","hash":"7aefa488acf5abebe205d52e5908e88cf0e14d6e","modified":499162500000},{"_id":"themes/async/scripts/helper/variable.js","hash":"b5912726f7015076f9671f3e24087c400c781db7","modified":499162500000},{"_id":"themes/async/scripts/tags/caniuse.js","hash":"45df24923a6f3d061f37fcbb953a7492594204f3","modified":499162500000},{"_id":"themes/async/scripts/tags/flink.js","hash":"962f71341a117ab5ff67ec7a2d83125f0f4e7e7d","modified":499162500000},{"_id":"themes/async/scripts/tags/gallery.js","hash":"6aa14493096c10b73349b9d6f9ea70cfe65874b1","modified":499162500000},{"_id":"themes/async/layout/project.ejs","hash":"86acaced0704da2d4c4703616a83e696350459c7","modified":499162500000},{"_id":"themes/async/layout/page.ejs","hash":"1a81e2a16d463f5f944ae3b79f444c2ac4de1ce0","modified":499162500000},{"_id":"themes/async/layout/post.ejs","hash":"1967b1062c872a7c0e3131aba78aaca7f65a0a18","modified":499162500000},{"_id":"themes/async/layout/tag.ejs","hash":"523ababa0d332c0c7463664e658d24c2bbe6c3f7","modified":499162500000},{"_id":"themes/async/scripts/tags/imgs.js","hash":"0db85bb9b42e0dc0c6ffbd019a7a9a87c7253d3e","modified":499162500000},{"_id":"themes/async/scripts/tags/note.js","hash":"24db43d8712bbaa6464675d5772c65226094833b","modified":499162500000},{"_id":"themes/async/source/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":499162500000},{"_id":"themes/async/scripts/tags/tabs.js","hash":"af6ca352d69cdd9d3ae0e0682b9ab5597fa15261","modified":499162500000},{"_id":"themes/async/source/sw.js","hash":"01b07120762ab155c99478afb36075d4d7e2bc9c","modified":499162500000},{"_id":"themes/async/layout/_partial/banner.ejs","hash":"a044ac4452808df3a779f75d8955593067484625","modified":499162500000},{"_id":"themes/async/layout/_partial/head.ejs","hash":"44daee1120cf8f9b673e4cd5a44ff3c9c7e5247b","modified":499162500000},{"_id":"themes/async/layout/_partial/footer.ejs","hash":"3e1155558af01567f800970a3239ea43210b7bcc","modified":499162500000},{"_id":"themes/async/layout/_widget/header-theme.ejs","hash":"e3dd05bd47e62edc68a37ed17773211c234f2675","modified":499162500000},{"_id":"themes/async/layout/_widget/header-search.ejs","hash":"de299cf96a8c7e546511a4196874d44b1db43b57","modified":499162500000},{"_id":"themes/async/layout/_partial/header.ejs","hash":"0409d9d28093ceaefcd6e8bd8d3f03553d8b00d0","modified":499162500000},{"_id":"themes/async/layout/_partial/script.ejs","hash":"b7b588bd748add9e2a718e9684a67293b2de96c4","modified":499162500000},{"_id":"themes/async/layout/_third-party/cdn.ejs","hash":"964693a454808aa8277027ec3c5dda7f7af01255","modified":499162500000},{"_id":"themes/async/layout/_third-party/plugin.ejs","hash":"ce86e76f541f6c9b1856567e0bdd5ad24ce519a7","modified":499162500000},{"_id":"themes/async/layout/_third-party/sw.ejs","hash":"277f75522dffa7d985f3400f18b4f60861d2430d","modified":499162500000},{"_id":"themes/async/layout/_third-party/web-analytics.ejs","hash":"7d6a743d7c18ea619b01a7740db09a1c82945331","modified":499162500000},{"_id":"themes/async/layout/_widget/about-card.ejs","hash":"eb5e8539844b28229a3d8bb26452e5800d976c2e","modified":499162500000},{"_id":"themes/async/layout/_widget/categorie.ejs","hash":"1752c7f055a81e4ad94cd65551f549b190adf17c","modified":499162500000},{"_id":"themes/async/layout/_widget/header-menu.ejs","hash":"a4a4884e1ad24da186df197fc0d9a75e6f4741c5","modified":499162500000},{"_id":"themes/async/layout/_widget/header-logo.ejs","hash":"ad750aad202365e0c5d35f20bc3c7954f85c0573","modified":499162500000},{"_id":"themes/async/layout/_widget/fixed-btn.ejs","hash":"7423a0638d27a7d980e7bcbc09c55761f37ff17d","modified":499162500000},{"_id":"themes/async/layout/_widget/post-toc.ejs","hash":"c0355e8fb5067bb36976c6a6c587b9393418e861","modified":499162500000},{"_id":"themes/async/layout/_widget/paginator.ejs","hash":"c7b76e443375b7d2bb15452b34ffcc654105db1f","modified":499162500000},{"_id":"themes/async/layout/_widget/search.ejs","hash":"573c500a4ecb65b822b3a34168dbcf446c92bc0f","modified":499162500000},{"_id":"themes/async/source/css/index.less","hash":"dea7c2030cd03e5aa5af023157a34bcba8cae25e","modified":1720775927409},{"_id":"themes/async/source/css/_components/index.less","hash":"b51d76a9a76e1e881f1f016c76da9218ea90940b","modified":1721863951304},{"_id":"themes/async/source/css/_components/new.less","hash":"7bbeb263b7be616da34769431934d544b9393d54","modified":1721863931524},{"_id":"themes/async/source/css/_components/top-bar.less","hash":"56978e209663bfb9ca380bd972866c0a0b7c4879","modified":1721825763541},{"_id":"themes/async/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1679055665000},{"_id":"themes/async/source/img/csp.jpeg","hash":"fc6506abfa17a4adc9df2256afaf7cbd4145b143","modified":1690034449965},{"_id":"themes/async/source/img/cpp.png","hash":"f334062d972937e42485094801f97fb31f513257","modified":1690033382498},{"_id":"themes/async/source/img/block.jpg","hash":"1dd350354bd3fe2e7287dfe063d7783e4ab91090","modified":1679055665000},{"_id":"themes/async/source/img/avatar.jpg","hash":"e9e4108ab199202288ee68342a40064649c3d7c1","modified":1679055665000},{"_id":"themes/async/source/css/_components/plugins/highlight/prismjs/line-number.less","hash":"9bd2cce0c88408f64f5712d076542b623a270ab7","modified":499162500000},{"_id":"themes/async/README.md","hash":"ba6d8562ce722c10bbe6cf70cd7b21cc2d844608","modified":499162500000},{"_id":"themes/async/README_zh-CN.md","hash":"d5406af5d2cea7e1f5741f3e3b435d460870a5eb","modified":499162500000},{"_id":"themes/async/plugins.yml","hash":"9e50cd335ae74447b66e7b855ef825c1ba9a5a14","modified":499162500000},{"_id":"themes/async/scripts/utils.js","hash":"c0f6d020f71a7751f1d2d2a727e8d811ae84cc6b","modified":499162500000},{"_id":"themes/async/languages/default.yml","hash":"243f1e303d7e180bfd462cd4bf35bc4ca1afae67","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/highlight/prismjs/diff.less","hash":"1da7d603b515e02305951456dcb8b8ddf6e322f3","modified":499162500000},{"_id":"themes/async/layout/_third-party/comment/twikoo.ejs","hash":"4a0aba54594f6692cf11f756ecac2dfb738bcdf6","modified":499162500000},{"_id":"themes/async/source/css/_components/title-divider.less","hash":"67d38725dcc5910f5283a01f4cffe46042a3cc67","modified":499162500000},{"_id":"themes/async/source/css/_components/timeline.less","hash":"e6e7b4bac39298e5d00031b0ea99313f6adcc127","modified":499162500000},{"_id":"themes/async/layout/_partial/page/tag.ejs","hash":"b827961b3a394ab4952508b2e8f8fd2a58a143de","modified":499162500000},{"_id":"themes/async/source/css/_components/publication.less","hash":"27c616b733c6d5b6dd20baaf58e0123284391722","modified":499162500000},{"_id":"themes/async/layout/_partial/page/project.ejs","hash":"afdd4092f92dcd2dc8cb79aba2b214a9d209b1a6","modified":499162500000},{"_id":"themes/async/source/css/_variables/index.less","hash":"d651e07e59d8826e54c4074d2bf765f9cf54ecef","modified":1720776399138},{"_id":"themes/async/source/fonts/webfonts/fa-regular-400.woff2","hash":"fbb0d9d51850d824d7eba66e0e210c778d6d42f5","modified":499162500000},{"_id":"themes/async/source/css/_components/pagination.less","hash":"c31230e3f8b989ecd7fd360de5617ce7203d1b3b","modified":499162500000},{"_id":"themes/async/source/css/_components/mode-switcher.less","hash":"278b5a4d32df86717cd6564385d71ba8db39b037","modified":499162500000},{"_id":"themes/async/source/css/_components/message.less","hash":"3be2072551fe6064afb994a39620a135c09c156d","modified":499162500000},{"_id":"themes/async/source/css/_components/menu.less","hash":"75bfe8fb8a1e667bbcb7319f3446ae730bce51ef","modified":499162500000},{"_id":"themes/async/source/css/_components/form.less","hash":"3e266bafb5423d5a1ca8dd985167694c2e950b1e","modified":499162500000},{"_id":"themes/async/source/css/_components/footer.less","hash":"c393ebf29473130907f19b94a2e78581610772d6","modified":499162500000},{"_id":"themes/async/source/css/_components/card.less","hash":"7509c0dfe9755006ecfe2c07dad47730878c0b3f","modified":499162500000},{"_id":"themes/async/source/css/_components/btn.less","hash":"eefe6b747d9ab02d5a5b24523994d974e50e62ca","modified":499162500000},{"_id":"themes/async/source/css/_components/blockquote.less","hash":"50ba46440e2b59c2d6c3486924ba4d1d16ca7547","modified":499162500000},{"_id":"themes/async/source/css/_components/tag-plugins.less","hash":"02e0e9dc97449014c14d05483d860a3bb206ed3e","modified":499162500000},{"_id":"themes/async/source/css/plugins/font-awesome.min.css","hash":"6137a9883adce70d78c7f7bbe8af27d91b627d32","modified":499162500000},{"_id":"themes/async/source/css/plugins/bootstrap.row.css","hash":"d06c09ad9e0e351893cb2503e54f9b19f821f540","modified":499162500000},{"_id":"themes/async/layout/_third-party/seo/baidu-push.ejs","hash":"2e3d405b5973c5ceed9cc24a5591240c0345cb94","modified":499162500000},{"_id":"themes/async/layout/_third-party/comment/giscus.ejs","hash":"1ea620f2e4473246272ec7e9f27f8c82f7a5f48e","modified":499162500000},{"_id":"themes/async/layout/_partial/page/index.ejs","hash":"19d539a157993bd92ec61db15cf4f6c8fefbbe11","modified":499162500000},{"_id":"themes/async/layout/_partial/sidebar/index.ejs","hash":"bbdebed5b66650db2eb295491c6b4be1a3ef28c8","modified":499162500000},{"_id":"themes/async/layout/_third-party/comment/index.ejs","hash":"bac629e4c8d28cc16720c17d526e0b9fc7059be3","modified":499162500000},{"_id":"themes/async/layout/_third-party/comment/b-comments.ejs","hash":"398c4769c6bb945844e02fdbaddab501afbfc33f","modified":499162500000},{"_id":"themes/async/layout/_partial/post/reward.ejs","hash":"664c43ab7346d700d942e30d2a5bdd119743c647","modified":499162500000},{"_id":"themes/async/layout/_partial/post/post-next-prev.ejs","hash":"81920ae69da586274c742e1a6467b3a0145064b9","modified":499162500000},{"_id":"themes/async/layout/_partial/post/post-info.ejs","hash":"18b2d5d78d36fe1c265eb9c4c6aa285e38626886","modified":499162500000},{"_id":"themes/async/layout/_partial/post/post-copyright.ejs","hash":"c2f0b1c2f9a4fbcf664b418f5ef1f98630d446d8","modified":499162500000},{"_id":"themes/async/layout/_partial/post/post-content.ejs","hash":"2cb43a1657dfcff799f67d8e06c31d4c9b571bca","modified":499162500000},{"_id":"themes/async/layout/_partial/post/post-card.ejs","hash":"9f12b489d174d9df83d1bef35f7a29c337b2d49a","modified":499162500000},{"_id":"themes/async/layout/_partial/post/post-card-mini.ejs","hash":"e7a47f33c24943229e423ab7b367973a2a014d24","modified":499162500000},{"_id":"themes/async/layout/_partial/preloader/page-preloader.ejs","hash":"a1ce51be9b477e146dcc3bb4fbe9628c1471969e","modified":499162500000},{"_id":"themes/async/layout/_partial/preloader/change-mode-preloader.ejs","hash":"8a6019defee71021eb9bd46549c8a4479546ec9d","modified":499162500000},{"_id":"themes/async/layout/_partial/page/category.ejs","hash":"00082fc6b67937339416971a201ad3121d30796e","modified":499162500000},{"_id":"themes/async/layout/_partial/page/post.ejs","hash":"b55db31dacc274339a1b20a6659fb85bf884ea3a","modified":499162500000},{"_id":"themes/async/source/css/_components/list.less","hash":"f3d810a84e47272828455362703d283b0d4b3997","modified":499162500000},{"_id":"themes/async/layout/_partial/page/links.ejs","hash":"5ba83054ad7a168048587c55bee3f078b6baa911","modified":499162500000},{"_id":"themes/async/layout/_partial/page/archive.ejs","hash":"777b20cf888f43e7c0b1dddae2db576c359681c1","modified":499162500000},{"_id":"themes/async/source/css/_components/app-frame.less","hash":"888dce7b284a2d2a4cf67e67a76461c0fb1612c8","modified":499162500000},{"_id":"themes/async/layout/_partial/page/about.ejs","hash":"47d2232ac1e20fc29a358c6a66f871ca2ee4c215","modified":499162500000},{"_id":"themes/async/source/js/main.js","hash":"72a9315d0c05eaaeab2d34d5ca8f76680e73a0b5","modified":499162500000},{"_id":"themes/async/source/img/xianhua.jpeg","hash":"6716b2046e0a6c9cbefab50e961e8841d6d8d2b6","modified":1721293202624},{"_id":"themes/async/source/img/tj.jpg","hash":"f172520eb4da2dc4814e0a0733145014a9cc2c55","modified":1690034829194},{"_id":"themes/async/source/img/php.jpg","hash":"667928a4007027be8610dc2a19d3f0b58f2aba79","modified":1689945251551},{"_id":"themes/async/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1679055665000},{"_id":"themes/async/source/img/favicon.svg","hash":"ef922eea66dc950fb1327dd4571d777b8aeb8161","modified":1679055665000},{"_id":"themes/async/source/css/_components/video.less","hash":"62a48f016c23f23aec13062b0241feb702fb6a85","modified":499162500000},{"_id":"themes/async/source/fonts/webfonts/fa-brands-400.woff2","hash":"f988b2efe9434b0af28943708d33dd3afad9a5ba","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/highlight/prismjs/index.less","hash":"54da8eddcddef000713468025443498b72ee4b86","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/highlight/highlight/index.less","hash":"bc02b3c4fed5f61e7182b73b7364fd5528d59fbe","modified":499162500000},{"_id":"themes/async/source/css/_components/preloader.less","hash":"bdf095448437bd711792dc60ac1c3aca147dadd1","modified":499162500000},{"_id":"themes/async/source/css/_components/fixed-btn.less","hash":"eee667056b0c2a5432defb26202e230a300aedc4","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/comment/bcomments.less","hash":"2a42ff8315ae2788421111b30c00755bdcac8497","modified":499162500000},{"_id":"themes/async/source/css/_components/base.less","hash":"104dab42cb06584989f266765e0d19f38f754553","modified":499162500000},{"_id":"themes/async/source/css/_components/banner.less","hash":"1c4eda54af31014ba8d5f8d845ccae34001e3061","modified":499162500000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina24.jpg","hash":"81449d165e08398ee6c8842a471dae7cb2fc9d4e","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina22.jpg","hash":"740b8c3b81934c8d737a0ba529e9a89231284265","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina1.jpeg","hash":"819b343bb046d9cfc8e51ab66cfba2e42db974f0","modified":1679055665000},{"_id":"themes/async/source/css/_components/toc.less","hash":"c6b0c29537f37506b74c432a5a3cbfa2f8182dfb","modified":499162500000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina17.jpg","hash":"a60dc34cf9d623c9a5b9a25db3f006bb2149bafd","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina24.jpg","hash":"45fd160d498834e2cb3822bbf89968537b9ff095","modified":1679055665000},{"_id":"themes/async/source/fonts/webfonts/fa-solid-900.woff2","hash":"80644191098f863f25be27841c0d92c452cf2327","modified":499162500000},{"_id":"themes/async/source/img/645b94740d2dde5777b50a12.png","hash":"660983a1aa2aed4486d1036a349a3231f78e6773","modified":1689948017341},{"_id":"themes/async/source/css/_components/plugins/read-mode/single-column.less","hash":"72e2a6e8165128abb02127aef6b90441aeb92f9e","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/comment/index.less","hash":"0460c4f8b74cca3a8e0856772a4008aae301fc01","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/read-mode/read-mode.less","hash":"0906dcdfa3bfe1b68ff6b0316ae3df2364c3d334","modified":499162500000},{"_id":"themes/async/layout/_partial/sidebar/card/email.ejs","hash":"d8ceed83ba3b0af7d361ca9254a62afd6e8f741e","modified":499162500000},{"_id":"themes/async/layout/_partial/sidebar/card/user.ejs","hash":"e883b30653e848ccd2e4697af18201aaa167445e","modified":499162500000},{"_id":"themes/async/layout/_partial/sidebar/card/social.ejs","hash":"4543c52a486a87f718fcfe03b6ef59bd771759d5","modified":499162500000},{"_id":"themes/async/layout/_partial/sidebar/card/info.ejs","hash":"dfa5d015d7174ad02df0099dadfab3e35e85dd59","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/comment/twikoo.less","hash":"cb7d1a04b997a5d55bbd8eef351b2c5822e771da","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/highlight/theme.less","hash":"a29e8c7c05663d074f4441e28361dc8d261e854f","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/highlight/highlight/diff.less","hash":"d6b8be31a7c8ba8cd676cc039786673cf0b6eccc","modified":499162500000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina19.jpeg","hash":"0cc2ea253fb4e3065abd570821275e53688e8591","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina5.jpg","hash":"0fdba6d252bbb6efa2fdca62b92dde53de6de302","modified":1679055665000},{"_id":"themes/async/source/css/_components/plugins/highlight/index.less","hash":"16629604ef46d58f80f5b89bd188817f3961634a","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/fancybox/index.less","hash":"320806390e7e78dee470350c503a8d89e651ddb8","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/read-mode/index.less","hash":"1e3da7b7eff2c38c5939f41e2ce85f98ffb7f527","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/reward/index.less","hash":"519f7bb569b1fa5185f839592e58ab5ba7b88dbe","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/search/index.less","hash":"120696c464c600fc43c7974e0d5ff8f5de1b9366","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/index.less","hash":"2c87ceca6a2642d6d4a31f6a6e293c54fb9494e9","modified":499162500000},{"_id":"themes/async/source/js/plugins/typing.js","hash":"49e5af4f80da9bfd46a81495711822de87719656","modified":499162500000},{"_id":"themes/async/source/js/plugins/local_search.js","hash":"7fe911937bd357f4236aabd8d43ae486bad8cd8e","modified":499162500000},{"_id":"themes/async/source/js/plugins/danmu.js","hash":"872bf0ed19608d130bed4a2ef42119681603ab9c","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/search/search.less","hash":"c04623b8102f806c0c140481424decad9edd5ec3","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/reward/reward.less","hash":"cf7a4f869b869830c38a0fad3c1be30d8d33b17a","modified":499162500000},{"_id":"themes/async/source/css/_components/plugins/highlight/minix.less","hash":"d406de6ef930380b9e1f94aabcd3c42ae092c8ef","modified":499162500000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina23.jpg","hash":"016d61c950773f28123b51652792187869d514bf","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina4.jpeg","hash":"89cce5e69502ca1254730e38c91c2382e98a0735","modified":1679055665000},{"_id":"themes/async/source/img/deepin.png","hash":"073cd8753e32129a88fae1edc373e988ca9ef64b","modified":1689947802069},{"_id":"themes/async/source/img/Elaina-lazy/Elaina11.jpg","hash":"8dae58725d0b9ab1b220d1987dad7ddd748aad3c","modified":1679055665000},{"_id":"themes/async/source/img/kmp.png","hash":"712baeb47b8c71d576a438067774ec2addaa85dd","modified":1690033876411},{"_id":"themes/async/source/css/plugins/bootstrap.min.css","hash":"b6f019002b87e86a07275eacd3c35a13c378b5c3","modified":499162500000},{"_id":"themes/async/source/img/simple-luogu.jpg","hash":"381a6de9615a5198030cf3909c39fd3c9ce1406e","modified":1689948144765},{"_id":"themes/async/source/img/bannnnner.jpg","hash":"efa8a9b67c623a8243ee51ee02b2794dcfd52b13","modified":1700572173410},{"_id":"themes/async/source/img/Elaina/Elaina23.jpg","hash":"aaa1a43975760a9e3440eed757c44e0f5b74c192","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina13.jpeg","hash":"592dea0f1a67631d4dd646493011435732bd3780","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina21.jpeg","hash":"ff750b919d9e55dfee534f9296d39d3ffd589446","modified":1679055665000},{"_id":"themes/async/source/img/树链剖分学习笔记.jpg","hash":"9e423c17a0e3a87b8739090ac1a1aa81c03fe9d4","modified":1689946478592},{"_id":"themes/async/source/img/Elaina/Elaina4.jpeg","hash":"27ef70ecd5c7cac8717a62c32f879e61ba0fd2aa","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina5.jpg","hash":"1fa5d0d1bf9b2ffbba96e7ba7abf07cb845adbad","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina19.jpeg","hash":"20194d85edde113a7666d0d6c80385a371ff4ef0","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina17.jpg","hash":"8070f977a6b6fb7d8cf755aa575779c1b219280e","modified":1679055665000},{"_id":"themes/async/source/img/国产系统Deepin20初体验.jpg","hash":"720b40ae09a1b767183873b4f0e736b6fed60184","modified":1689943687542},{"_id":"themes/async/source/img/Elaina-lazy/Elaina2.jpg","hash":"f6ea2f68acea790dab688732dcc8c6458382bb06","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina22.jpg","hash":"3f7e7a8fe94162de50ba0e51634aed88fd111342","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina7.jpeg","hash":"76a364c25a2308d9eda2b3296ff507477eecc963","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina16.jpeg","hash":"27d08aacb3964141755bfb0f0bbde1db04f18d13","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina13.jpeg","hash":"71d34ed39fcf562a6e8bcb6646ec98cf4b189599","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina10.jpeg","hash":"696e9009f09429847d35ef85f4ce123b41e6bf55","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina8.jpg","hash":"c6f724f0d6339ee5b49dddfd2e78ab7234fac453","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina20.jpg","hash":"33bf75cb5d725af6cb113da20532f223d43cd7eb","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina.png","hash":"7e517ba50100bcf2a38222c555fdb4dc703d1d1d","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina20.jpg","hash":"5e4ca84eeff6ff63edb3d9e603e8b53ec54a104f","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina9.png","hash":"e6a58256817fb7aec3f1444860dd61bb55cfcfbc","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina1.jpeg","hash":"6bf3fc04972f42cc9ad6548595eff45766205ada","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina8.jpg","hash":"3c0c3e312644f1941ac61c9d9cb9c62522b8f437","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina12.png","hash":"de57fa164998e3767d239b32b89415f9be181243","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina14.jpg","hash":"48818191b8c602bb7886c995bc5306ba6dd9fad1","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina6.png","hash":"bed5ff1bcbf6251614e5a63e52470910e86cf1fc","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina11.jpg","hash":"4c7c4d15ec55dd8afe59003243ecfdc03ad073e1","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina3.png","hash":"958071bc6a3cdd67b9f3763bdbd7db49fbdb75dd","modified":1679055665000},{"_id":"themes/async/source/img/banner.png","hash":"f961a392b8ebbc3957330562b98c4533697d6a32","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina9.png","hash":"425ae3c04d9faea63acf7bacc03469d35b914d0e","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina.png","hash":"f3ca77cde7f657da661471162e66d67f0eb7827b","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina6.png","hash":"7b58fcd81509b236dc0a161a27a8a1635ac2fbab","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina12.png","hash":"9d876cbc5f28e4e6e8131255b96b98ba932a1a81","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina3.png","hash":"ab2f71bde7af600c81c8f845c3955713f9f04e57","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina21.jpeg","hash":"b650c66cffb59805bd8c39246b80dcc7b448dc96","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina10.jpeg","hash":"968da79ea6b45aae9de871fc7e0023f8a110a937","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina18.png","hash":"ace1d23b99b6f35658286406b972899e7d103465","modified":1679055665000},{"_id":"themes/async/source/img/Elaina-lazy/Elaina15.png","hash":"772509be4145d229484ecdbfb9b0600861eb4ad8","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina14.jpg","hash":"eef9b04c2cae927f677c47afd16915284f67b87e","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina16.jpeg","hash":"ef6125a8fb812c5970417065e625e586358c6e60","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina2.jpg","hash":"f457fbb7b4bcdfba8803493ee9d32ed92d48cdb3","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina7.jpeg","hash":"f330aef7c5a1e9a0de8a84f29b0c0a08fc76448d","modified":1679055665000},{"_id":"themes/async/source/img/晚上.mp4","hash":"df3f3e52edc9800496760ccdf786042e9a3f362b","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina18.png","hash":"39aea6b0c7577330058a6c50d674a6827d429458","modified":1679055665000},{"_id":"themes/async/source/img/Elaina/Elaina15.png","hash":"66db75b7195d9dbcf26bdd3da65fe906cfdd21d8","modified":1679055665000},{"_id":"themes/async/source/img/1081225.mp4","hash":"a5f09c331dffe7e6c91732b6ddd662af2e09055b","modified":1679753174000},{"_id":"public/atom.xml","hash":"8d6b8ef03bf42757127d59b8539c5119cee493b2","modified":1721864066108},{"_id":"public/about/index.html","hash":"75a94b8155b129a58328adbac2a5bb7f169c3869","modified":1721864066108},{"_id":"public/categories/index.html","hash":"317587fb7eb5ebcb02f0eba67c2c04e3d3ba7b88","modified":1721864066108},{"_id":"public/download/index.html","hash":"1c4a34f1c708eef46326d2bd39bca4f938ec3778","modified":1721864066108},{"_id":"public/tags/index.html","hash":"56ebf207f2215366ea05c0faf7ab1f1d2962ae48","modified":1721864066108},{"_id":"public/404.html","hash":"bb58b46164577d55db3bdafdc2219aeec7e9d121","modified":1721864066108},{"_id":"public/links/index.html","hash":"e2b590513cc014a6b478bbd4476be09faf1562be","modified":1721864066108},{"_id":"public/2024/01/14/扫描线学习笔记/index.html","hash":"5592076f56dee4788e9158de026ce763fb337778","modified":1721864066108},{"_id":"public/2023/11/08/闲话11-8/index.html","hash":"c70b97333797781da5a9c4c8c6a758bc0ee711d4","modified":1721864066108},{"_id":"public/2023/08/15/Ubuntu更换开机动画/index.html","hash":"4f1bc6872425243a85329b2d9423c4d96f23739c","modified":1721864066108},{"_id":"public/2023/03/12/KMP学习笔记/index.html","hash":"f5963beaba21262c75bccc55857517ee64d0d1c1","modified":1721864066108},{"_id":"public/2023/01/25/国产系统Deepin20初体验/index.html","hash":"ada8f0494790bdf980e312aae6616def708dc778","modified":1721864066108},{"_id":"public/2023/01/13/树链剖分学习笔记/index.html","hash":"74bc557715427cfc7f33272ed97f00da9fb1322c","modified":1721864066108},{"_id":"public/2022/12/23/PHP环境/index.html","hash":"4b86d32fb961915234ea55b7460b40d4638eb518","modified":1721864066108},{"_id":"public/2022/11/06/CSP-2022/index.html","hash":"d843dc5c4f9dee7d92a3c10e95c76f68a671e29a","modified":1721864066108},{"_id":"public/2022/10/01/CF1730B题解/index.html","hash":"5384f405d22125adf502b2923385fdda8682f551","modified":1721864066108},{"_id":"public/2022/08/30/关于Simple-Luogu/index.html","hash":"5b76439a45e8ab92524ae2abee59bffd8b87307a","modified":1721864066108},{"_id":"public/2022/08/30/hello-world/index.html","hash":"a40fb2a9a59a0ac0bb2878ca6d388bf51b4ccb7d","modified":1721864066108},{"_id":"public/archives/index.html","hash":"0755c282b25e10ff271767559c02a09289053448","modified":1721864066108},{"_id":"public/archives/page/2/index.html","hash":"568a28819206da84a7c67bf8130ea4b3b55c5be7","modified":1721864066108},{"_id":"public/archives/2022/index.html","hash":"9610b05b7829a319a23f95b1941685da99a3dbc8","modified":1721864066108},{"_id":"public/archives/2022/08/index.html","hash":"c2dcc11756e31eec402d369606b99c49d7e485bd","modified":1721864066108},{"_id":"public/archives/2022/10/index.html","hash":"df81884e07e3cb67fe64db6e46b2cef90ef3f6c3","modified":1721864066108},{"_id":"public/archives/2022/11/index.html","hash":"885b79ebb3c2a9691514beea890e047b9bf16739","modified":1721864066108},{"_id":"public/archives/2022/12/index.html","hash":"ade471e2a7c0b60b0508eceb4852a61c4369fbaa","modified":1721864066108},{"_id":"public/archives/2023/index.html","hash":"2a9305b71217030b7a7702c71a7827edc279bff4","modified":1721864066108},{"_id":"public/archives/2023/01/index.html","hash":"0804b0918b55a94ad32e8f8fe08ba38d72f2e69a","modified":1721864066108},{"_id":"public/archives/2023/03/index.html","hash":"5603838b89f006f308777b8f843d20cc0456028b","modified":1721864066108},{"_id":"public/archives/2023/08/index.html","hash":"ee1ae2ba3a985b57795774051afd77843e0e7006","modified":1721864066108},{"_id":"public/archives/2023/11/index.html","hash":"4689551b582c6142734d4b448de376cb0b8ab740","modified":1721864066108},{"_id":"public/archives/2024/index.html","hash":"817a4b0fd1212fc313b84487b63f14143dc8a749","modified":1721864066108},{"_id":"public/archives/2024/01/index.html","hash":"0052f00d8390ed9bfda60d9ff2afd01fbd336910","modified":1721864066108},{"_id":"public/categories/题解/index.html","hash":"b44a5c8263466d1b255d4e69f7c63bb8bdd75617","modified":1721864066108},{"_id":"public/categories/记录/index.html","hash":"524f032b15c53f6aca64a69f1a284bcf6209f9af","modified":1721864066108},{"_id":"public/categories/学习笔记/index.html","hash":"1dc5c32c0354f8e2415e42e69fd726cc1aa22e72","modified":1721864066108},{"_id":"public/categories/创作/index.html","hash":"dfba1b5299d830c6771c7599e35781865ec4b312","modified":1721864066108},{"_id":"public/categories/闲话/index.html","hash":"67e7af1994abf249144b6dde657f5f63985d865f","modified":1721864066108},{"_id":"public/index.html","hash":"e35599c750964955bfc800a4e7ed0bedf25ddf83","modified":1721864066108},{"_id":"public/page/2/index.html","hash":"373e40f723bc8878c95cdb771844803d1250eb63","modified":1721864066108},{"_id":"public/tags/题解/index.html","hash":"390cd2931dd292dc77248d1948241d520d175b3a","modified":1721864066108},{"_id":"public/tags/记录/index.html","hash":"d9cce72ae7419f1081793578145432f7c30abafa","modified":1721864066108},{"_id":"public/tags/学习笔记/index.html","hash":"17f2d5416048ebbef43327494ba39fbe59a9c4d7","modified":1721864066108},{"_id":"public/tags/创作/index.html","hash":"414cc11af1c5f5cd1ebc1384ac200cec40daf838","modified":1721864066108},{"_id":"public/tags/闲话/index.html","hash":"ee10bdfb175f3bbed46d43a01cf4190c080b1073","modified":1721864066108},{"_id":"public/CNAME","hash":"ccdf2c1405319c61d93f7bcccfdf077c1af42859","modified":1721864066108},{"_id":"public/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1721864066108},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1721864066108},{"_id":"public/img/avatar.jpg","hash":"e9e4108ab199202288ee68342a40064649c3d7c1","modified":1721864066108},{"_id":"public/img/block.jpg","hash":"1dd350354bd3fe2e7287dfe063d7783e4ab91090","modified":1721864066108},{"_id":"public/img/cpp.png","hash":"f334062d972937e42485094801f97fb31f513257","modified":1721864066108},{"_id":"public/img/csp.jpeg","hash":"fc6506abfa17a4adc9df2256afaf7cbd4145b143","modified":1721864066108},{"_id":"public/img/favicon.svg","hash":"ef922eea66dc950fb1327dd4571d777b8aeb8161","modified":1721864066108},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1721864066108},{"_id":"public/img/php.jpg","hash":"667928a4007027be8610dc2a19d3f0b58f2aba79","modified":1721864066108},{"_id":"public/img/tj.jpg","hash":"f172520eb4da2dc4814e0a0733145014a9cc2c55","modified":1721864066108},{"_id":"public/img/xianhua.jpeg","hash":"6716b2046e0a6c9cbefab50e961e8841d6d8d2b6","modified":1721864066108},{"_id":"public/fonts/webfonts/fa-regular-400.woff2","hash":"fbb0d9d51850d824d7eba66e0e210c778d6d42f5","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina22.jpg","hash":"740b8c3b81934c8d737a0ba529e9a89231284265","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina24.jpg","hash":"81449d165e08398ee6c8842a471dae7cb2fc9d4e","modified":1721864066108},{"_id":"public/download/Elaina.zip","hash":"e526c92b9ae4eca888399dcae9c50d16ccdcf876","modified":1721864066108},{"_id":"public/fonts/webfonts/fa-brands-400.woff2","hash":"f988b2efe9434b0af28943708d33dd3afad9a5ba","modified":1721864066108},{"_id":"public/fonts/webfonts/fa-solid-900.woff2","hash":"80644191098f863f25be27841c0d92c452cf2327","modified":1721864066108},{"_id":"public/img/Elaina/Elaina24.jpg","hash":"45fd160d498834e2cb3822bbf89968537b9ff095","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina1.jpeg","hash":"819b343bb046d9cfc8e51ab66cfba2e42db974f0","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina17.jpg","hash":"a60dc34cf9d623c9a5b9a25db3f006bb2149bafd","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina19.jpeg","hash":"0cc2ea253fb4e3065abd570821275e53688e8591","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina23.jpg","hash":"016d61c950773f28123b51652792187869d514bf","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina4.jpeg","hash":"89cce5e69502ca1254730e38c91c2382e98a0735","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina5.jpg","hash":"0fdba6d252bbb6efa2fdca62b92dde53de6de302","modified":1721864066108},{"_id":"public/sw.js","hash":"01b07120762ab155c99478afb36075d4d7e2bc9c","modified":1721864066108},{"_id":"public/css/plugins/bootstrap.row.css","hash":"d06c09ad9e0e351893cb2503e54f9b19f821f540","modified":1721864066108},{"_id":"public/js/plugins/danmu.js","hash":"872bf0ed19608d130bed4a2ef42119681603ab9c","modified":1721864066108},{"_id":"public/js/plugins/local_search.js","hash":"7fe911937bd357f4236aabd8d43ae486bad8cd8e","modified":1721864066108},{"_id":"public/js/plugins/typing.js","hash":"49e5af4f80da9bfd46a81495711822de87719656","modified":1721864066108},{"_id":"public/js/main.js","hash":"72a9315d0c05eaaeab2d34d5ca8f76680e73a0b5","modified":1721864066108},{"_id":"public/css/plugins/bootstrap.min.css","hash":"b6f019002b87e86a07275eacd3c35a13c378b5c3","modified":1721864066108},{"_id":"public/css/plugins/font-awesome.min.css","hash":"6137a9883adce70d78c7f7bbe8af27d91b627d32","modified":1721864066108},{"_id":"public/img/deepin.png","hash":"073cd8753e32129a88fae1edc373e988ca9ef64b","modified":1721864066108},{"_id":"public/img/kmp.png","hash":"712baeb47b8c71d576a438067774ec2addaa85dd","modified":1721864066108},{"_id":"public/img/Elaina/Elaina23.jpg","hash":"aaa1a43975760a9e3440eed757c44e0f5b74c192","modified":1721864066108},{"_id":"public/img/Elaina/Elaina4.jpeg","hash":"27ef70ecd5c7cac8717a62c32f879e61ba0fd2aa","modified":1721864066108},{"_id":"public/img/Elaina/Elaina5.jpg","hash":"1fa5d0d1bf9b2ffbba96e7ba7abf07cb845adbad","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina11.jpg","hash":"8dae58725d0b9ab1b220d1987dad7ddd748aad3c","modified":1721864066108},{"_id":"public/img/645b94740d2dde5777b50a12.png","hash":"660983a1aa2aed4486d1036a349a3231f78e6773","modified":1721864066108},{"_id":"public/img/simple-luogu.jpg","hash":"381a6de9615a5198030cf3909c39fd3c9ce1406e","modified":1721864066108},{"_id":"public/img/树链剖分学习笔记.jpg","hash":"9e423c17a0e3a87b8739090ac1a1aa81c03fe9d4","modified":1721864066108},{"_id":"public/img/Elaina/Elaina19.jpeg","hash":"20194d85edde113a7666d0d6c80385a371ff4ef0","modified":1721864066108},{"_id":"public/img/Elaina/Elaina22.jpg","hash":"3f7e7a8fe94162de50ba0e51634aed88fd111342","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina13.jpeg","hash":"592dea0f1a67631d4dd646493011435732bd3780","modified":1721864066108},{"_id":"public/img/国产系统Deepin20初体验.jpg","hash":"720b40ae09a1b767183873b4f0e736b6fed60184","modified":1721864066108},{"_id":"public/img/Elaina/Elaina17.jpg","hash":"8070f977a6b6fb7d8cf755aa575779c1b219280e","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina21.jpeg","hash":"ff750b919d9e55dfee534f9296d39d3ffd589446","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina7.jpeg","hash":"76a364c25a2308d9eda2b3296ff507477eecc963","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina10.jpeg","hash":"696e9009f09429847d35ef85f4ce123b41e6bf55","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina16.jpeg","hash":"27d08aacb3964141755bfb0f0bbde1db04f18d13","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina20.jpg","hash":"33bf75cb5d725af6cb113da20532f223d43cd7eb","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina8.jpg","hash":"c6f724f0d6339ee5b49dddfd2e78ab7234fac453","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina2.jpg","hash":"f6ea2f68acea790dab688732dcc8c6458382bb06","modified":1721864066108},{"_id":"public/img/Elaina/Elaina1.jpeg","hash":"6bf3fc04972f42cc9ad6548595eff45766205ada","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina.png","hash":"7e517ba50100bcf2a38222c555fdb4dc703d1d1d","modified":1721864066108},{"_id":"public/img/Elaina/Elaina13.jpeg","hash":"71d34ed39fcf562a6e8bcb6646ec98cf4b189599","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina9.png","hash":"e6a58256817fb7aec3f1444860dd61bb55cfcfbc","modified":1721864066108},{"_id":"public/img/Elaina/Elaina20.jpg","hash":"5e4ca84eeff6ff63edb3d9e603e8b53ec54a104f","modified":1721864066108},{"_id":"public/img/Elaina/Elaina8.jpg","hash":"3c0c3e312644f1941ac61c9d9cb9c62522b8f437","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina14.jpg","hash":"48818191b8c602bb7886c995bc5306ba6dd9fad1","modified":1721864066108},{"_id":"public/css/index.css","hash":"f99bbb53fff4b55a3efbb56dfae7a673e529c7a5","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina12.png","hash":"de57fa164998e3767d239b32b89415f9be181243","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina6.png","hash":"bed5ff1bcbf6251614e5a63e52470910e86cf1fc","modified":1721864066108},{"_id":"public/img/Elaina/Elaina11.jpg","hash":"4c7c4d15ec55dd8afe59003243ecfdc03ad073e1","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina3.png","hash":"958071bc6a3cdd67b9f3763bdbd7db49fbdb75dd","modified":1721864066108},{"_id":"public/img/bannnnner.jpg","hash":"efa8a9b67c623a8243ee51ee02b2794dcfd52b13","modified":1721864066108},{"_id":"public/img/banner.png","hash":"f961a392b8ebbc3957330562b98c4533697d6a32","modified":1721864066108},{"_id":"public/img/Elaina/Elaina9.png","hash":"425ae3c04d9faea63acf7bacc03469d35b914d0e","modified":1721864066108},{"_id":"public/img/Elaina/Elaina.png","hash":"f3ca77cde7f657da661471162e66d67f0eb7827b","modified":1721864066108},{"_id":"public/img/Elaina/Elaina6.png","hash":"7b58fcd81509b236dc0a161a27a8a1635ac2fbab","modified":1721864066108},{"_id":"public/img/Elaina/Elaina12.png","hash":"9d876cbc5f28e4e6e8131255b96b98ba932a1a81","modified":1721864066108},{"_id":"public/img/Elaina/Elaina21.jpeg","hash":"b650c66cffb59805bd8c39246b80dcc7b448dc96","modified":1721864066108},{"_id":"public/img/Elaina/Elaina3.png","hash":"ab2f71bde7af600c81c8f845c3955713f9f04e57","modified":1721864066108},{"_id":"public/img/Elaina/Elaina10.jpeg","hash":"968da79ea6b45aae9de871fc7e0023f8a110a937","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina18.png","hash":"ace1d23b99b6f35658286406b972899e7d103465","modified":1721864066108},{"_id":"public/img/Elaina-lazy/Elaina15.png","hash":"772509be4145d229484ecdbfb9b0600861eb4ad8","modified":1721864066108},{"_id":"public/img/Elaina/Elaina14.jpg","hash":"eef9b04c2cae927f677c47afd16915284f67b87e","modified":1721864066108},{"_id":"public/img/Elaina/Elaina16.jpeg","hash":"ef6125a8fb812c5970417065e625e586358c6e60","modified":1721864066108},{"_id":"public/img/Elaina/Elaina2.jpg","hash":"f457fbb7b4bcdfba8803493ee9d32ed92d48cdb3","modified":1721864066108},{"_id":"public/img/Elaina/Elaina7.jpeg","hash":"f330aef7c5a1e9a0de8a84f29b0c0a08fc76448d","modified":1721864066108},{"_id":"public/img/晚上.mp4","hash":"df3f3e52edc9800496760ccdf786042e9a3f362b","modified":1721864066108},{"_id":"public/img/Elaina/Elaina18.png","hash":"39aea6b0c7577330058a6c50d674a6827d429458","modified":1721864066108},{"_id":"public/img/Elaina/Elaina15.png","hash":"66db75b7195d9dbcf26bdd3da65fe906cfdd21d8","modified":1721864066108},{"_id":"public/img/1081225.mp4","hash":"a5f09c331dffe7e6c91732b6ddd662af2e09055b","modified":1721864066108}],"Category":[{"name":"题解","_id":"clz0heonq00044mu8evz11ce7"},{"name":"记录","_id":"clz0heonv000c4mu81snn0dkr"},{"name":"学习笔记","_id":"clz0heony000j4mu810sm1rnd"},{"name":"创作","_id":"clz0heoo500124mu8f23xab9w"},{"name":"闲话","_id":"clz0heoo600184mu8a5j4547f"}],"Data":[],"Page":[{"layout":"404","_content":"","source":"404.md","raw":"---\nlayout: 404\n---","date":"2024-07-11T08:33:53.555Z","updated":"2023-06-13T13:19:57.648Z","path":"404.html","title":"","comments":1,"_id":"clz0heonj00004mu86hh1ajjp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"About","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: About\nlayout: about\n---","date":"2024-07-18T10:51:07.721Z","updated":"2024-07-18T10:51:07.721Z","path":"about/index.html","comments":1,"_id":"clz0heono00024mu8ee035r00","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2024-07-18T10:39:41.000Z","layout":"category","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2024-07-18 18:39:41\nlayout: category\n---\n","updated":"2024-07-18T10:40:07.579Z","path":"categories/index.html","comments":1,"_id":"clz0heonr00064mu89g5d00tt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"download","date":"2023-08-15T12:34:07.000Z","_content":"此页面提供文件下载。","source":"download/index.md","raw":"---\ntitle: download\ndate: 2023-08-15 20:34:07\n---\n此页面提供文件下载。","updated":"2023-08-15T12:36:35.693Z","path":"download/index.html","comments":1,"layout":"page","_id":"clz0heont00084mu8fx561b6s","content":"<p>此页面提供文件下载。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>此页面提供文件下载。</p>\n"},{"title":"友链","layout":"links","_content":"","source":"links/index.md","raw":"---\ntitle: 友链\nlayout: links\n---\n","date":"2024-07-18T10:41:39.199Z","updated":"2024-07-18T10:41:39.199Z","path":"links/index.html","comments":1,"_id":"clz0heonu000a4mu842pk9v5a","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2024-07-18T10:40:51.000Z","layout":"tag","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2024-07-18 18:40:51\nlayout: tag\n---\n","updated":"2024-07-18T10:41:06.007Z","path":"tags/index.html","comments":1,"_id":"clz0heonw000f4mu8bbi94233","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"CF1730A/B题解","date":"2022-10-01T08:20:12.000Z","photos":["/img/tj.jpg"],"cover":["/img/tj.jpg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about OI..."},"toc":true,"_content":"\n## TJ 时间\n\n### A 题：\n太水了，解法各种各样，真的没必要将（真的！\n\n看看[隔壁的TJ](https://www.scorpio532992.ltd/2022/09/30/Codeforces-Round823(Div.%202)%5BA.Planets%5D/)吧（真的没必要讲，纯模拟。\n\n关于隔壁为啥还没有 B 题TJ（DDDD\n\n### B 题：\n\n#### 题意：\n\n坐标轴 n 个点，每个点的坐标是 xi (凑合着看吧，我还不会ktext），然而每个点都有一个前提时间 ti，我们需要寻找一个点 x0，使得 所有的 |xi - x0| + ti 中最大的最小。（千万不要理解成加起来最小啊，我就是掉了这个坑！\n\n那天晚上，想了大约有 15-25 分钟，终于想出这么二分了（题目标签就是二分\n\n智慧之神 said：二分出一个点。\n\n我不知道可不可行，但我对此毫无想法（大几率是不可行的\n\n应该是二分时间。\n\n思路：[Link](https://www.luogu.com.cn/discuss/501749)\n\n看不懂对吧，但是伟大的 [czx](https://www.luogu.com.cn/user/186045) 却看懂了。\n\n详细讲一下吧QAQ\n\n我们二分的是时间啊，和一些二分题目不同，大部分二分查找题目都是直接二分答案的。\n\n那么对于第 i 个点\n\n![zzb](https://pic1.imgdb.cn/item/633839a316f2c2beb1f4b15b.png)\n\n那么距离 xi 长为 mid - ti(mid > ti) 的距离之内的范围所有的点是不是都可以作为 x0 啊（只考虑只有这一点的情况）。\n\n![zzb](https://pic1.imgdb.cn/item/63383b0616f2c2beb1f7142b.png)\n\n然鹅，有多个点呢？\n\n![](https://pic1.imgdb.cn/item/63383b9216f2c2beb1f7ae66.png)\n\n很明显，就是区间重叠部分，所以~~我们来个递归，枚举每一个点，找到重叠部分~~。\n\n这时，我们就会收到来自 czx 的嘲讽\n\n```\n@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？\n```\n\n然后就会收到来自 czx 的温馨提示：左端点全部取max，右端点全部取min，最后 L<=R 即为有解\n\n### CODE：\n\n```cpp\n\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nint a[100001], t[100001];\nint al, ar, n;\ninline bool check(int time) {\n\tal = -1, ar = 1e9;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (time - t[i] < 0)\n\t\t\treturn false;\n\t\tal = max(al, a[i] - (time - t[i]));\n\t\tar = min(ar, a[i] + (time - t[i]));\n\t}\n\treturn al <= ar;\n}\nsigned main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n    int T;\n    cin >> T;\n    while (T--) {\n    \tcin >> n;\n    \tfor (int i = 1; i <= n; i++) cin >> a[i];\n    \tfor (int i = 1; i <= n; i++) cin >> t[i];\n    \tdouble l = 0, r = 1e9;\n    \tdouble ans;\n    \twhile (l <= r && r - l > 0.0000001) {\n    \t\tdouble mid = (l + r) / 2.0;\n    \t\tif (check(mid)) {\n    \t\t\tans = (al + ar) / 2.0;\n    \t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%.6lf\\n\", ans);\n\t}\n    return 0;\n}\n\n```\n\nSpecial Thanks: CZX","source":"_posts/CF1730B题解.md","raw":"---\ntitle: CF1730A/B题解\ndate: 2022-10-01 16:20:12\ntags: 题解\ncategories: 题解\nphotos: /img/tj.jpg\ncover: [/img/tj.jpg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about OI...\ntoc: true\n---\n\n## TJ 时间\n\n### A 题：\n太水了，解法各种各样，真的没必要将（真的！\n\n看看[隔壁的TJ](https://www.scorpio532992.ltd/2022/09/30/Codeforces-Round823(Div.%202)%5BA.Planets%5D/)吧（真的没必要讲，纯模拟。\n\n关于隔壁为啥还没有 B 题TJ（DDDD\n\n### B 题：\n\n#### 题意：\n\n坐标轴 n 个点，每个点的坐标是 xi (凑合着看吧，我还不会ktext），然而每个点都有一个前提时间 ti，我们需要寻找一个点 x0，使得 所有的 |xi - x0| + ti 中最大的最小。（千万不要理解成加起来最小啊，我就是掉了这个坑！\n\n那天晚上，想了大约有 15-25 分钟，终于想出这么二分了（题目标签就是二分\n\n智慧之神 said：二分出一个点。\n\n我不知道可不可行，但我对此毫无想法（大几率是不可行的\n\n应该是二分时间。\n\n思路：[Link](https://www.luogu.com.cn/discuss/501749)\n\n看不懂对吧，但是伟大的 [czx](https://www.luogu.com.cn/user/186045) 却看懂了。\n\n详细讲一下吧QAQ\n\n我们二分的是时间啊，和一些二分题目不同，大部分二分查找题目都是直接二分答案的。\n\n那么对于第 i 个点\n\n![zzb](https://pic1.imgdb.cn/item/633839a316f2c2beb1f4b15b.png)\n\n那么距离 xi 长为 mid - ti(mid > ti) 的距离之内的范围所有的点是不是都可以作为 x0 啊（只考虑只有这一点的情况）。\n\n![zzb](https://pic1.imgdb.cn/item/63383b0616f2c2beb1f7142b.png)\n\n然鹅，有多个点呢？\n\n![](https://pic1.imgdb.cn/item/63383b9216f2c2beb1f7ae66.png)\n\n很明显，就是区间重叠部分，所以~~我们来个递归，枚举每一个点，找到重叠部分~~。\n\n这时，我们就会收到来自 czx 的嘲讽\n\n```\n@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？\n```\n\n然后就会收到来自 czx 的温馨提示：左端点全部取max，右端点全部取min，最后 L<=R 即为有解\n\n### CODE：\n\n```cpp\n\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nint a[100001], t[100001];\nint al, ar, n;\ninline bool check(int time) {\n\tal = -1, ar = 1e9;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (time - t[i] < 0)\n\t\t\treturn false;\n\t\tal = max(al, a[i] - (time - t[i]));\n\t\tar = min(ar, a[i] + (time - t[i]));\n\t}\n\treturn al <= ar;\n}\nsigned main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n    int T;\n    cin >> T;\n    while (T--) {\n    \tcin >> n;\n    \tfor (int i = 1; i <= n; i++) cin >> a[i];\n    \tfor (int i = 1; i <= n; i++) cin >> t[i];\n    \tdouble l = 0, r = 1e9;\n    \tdouble ans;\n    \twhile (l <= r && r - l > 0.0000001) {\n    \t\tdouble mid = (l + r) / 2.0;\n    \t\tif (check(mid)) {\n    \t\t\tans = (al + ar) / 2.0;\n    \t\t\tr = mid - 1;\n\t\t\t} else {\n\t\t\t\tl = mid + 1;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%.6lf\\n\", ans);\n\t}\n    return 0;\n}\n\n```\n\nSpecial Thanks: CZX","slug":"CF1730B题解","published":1,"updated":"2024-07-12T09:38:48.279Z","comments":1,"layout":"post","link":"","_id":"clz0heonm00014mu88mjegtso","content":"<h2 id=\"TJ-时间\"><a href=\"#TJ-时间\" class=\"headerlink\" title=\"TJ 时间\"></a>TJ 时间</h2><h3 id=\"A-题：\"><a href=\"#A-题：\" class=\"headerlink\" title=\"A 题：\"></a>A 题：</h3><p>太水了，解法各种各样，真的没必要将（真的！</p>\n<p>看看<a href=\"https://www.scorpio532992.ltd/2022/09/30/Codeforces-Round823(Div.%202)%5BA.Planets%5D/\">隔壁的TJ</a>吧（真的没必要讲，纯模拟。</p>\n<p>关于隔壁为啥还没有 B 题TJ（DDDD</p>\n<h3 id=\"B-题：\"><a href=\"#B-题：\" class=\"headerlink\" title=\"B 题：\"></a>B 题：</h3><h4 id=\"题意：\"><a href=\"#题意：\" class=\"headerlink\" title=\"题意：\"></a>题意：</h4><p>坐标轴 n 个点，每个点的坐标是 xi (凑合着看吧，我还不会ktext），然而每个点都有一个前提时间 ti，我们需要寻找一个点 x0，使得 所有的 |xi - x0| + ti 中最大的最小。（千万不要理解成加起来最小啊，我就是掉了这个坑！</p>\n<p>那天晚上，想了大约有 15-25 分钟，终于想出这么二分了（题目标签就是二分</p>\n<p>智慧之神 said：二分出一个点。</p>\n<p>我不知道可不可行，但我对此毫无想法（大几率是不可行的</p>\n<p>应该是二分时间。</p>\n<p>思路：<a href=\"https://www.luogu.com.cn/discuss/501749\">Link</a></p>\n<p>看不懂对吧，但是伟大的 <a href=\"https://www.luogu.com.cn/user/186045\">czx</a> 却看懂了。</p>\n<p>详细讲一下吧QAQ</p>\n<p>我们二分的是时间啊，和一些二分题目不同，大部分二分查找题目都是直接二分答案的。</p>\n<p>那么对于第 i 个点</p>\n<p><img src=\"https://pic1.imgdb.cn/item/633839a316f2c2beb1f4b15b.png\" alt=\"zzb\"  data-tag='post-image' loading=\"lazy\" onerror='this.onerror=null;this.src=\"/img/404.jpg\"'></p>\n<p>那么距离 xi 长为 mid - ti(mid &gt; ti) 的距离之内的范围所有的点是不是都可以作为 x0 啊（只考虑只有这一点的情况）。</p>\n<p><img src=\"https://pic1.imgdb.cn/item/63383b0616f2c2beb1f7142b.png\" alt=\"zzb\"  data-tag='post-image' loading=\"lazy\" onerror='this.onerror=null;this.src=\"/img/404.jpg\"'></p>\n<p>然鹅，有多个点呢？</p>\n<p><img src=\"https://pic1.imgdb.cn/item/63383b9216f2c2beb1f7ae66.png\"  data-tag='post-image' loading=\"lazy\" onerror='this.onerror=null;this.src=\"/img/404.jpg\"'></p>\n<p>很明显，就是区间重叠部分，所以<del>我们来个递归，枚举每一个点，找到重叠部分</del>。</p>\n<p>这时，我们就会收到来自 czx 的嘲讽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？</span><br></pre></td></tr></table></figure>\n\n<p>然后就会收到来自 czx 的温馨提示：左端点全部取max，右端点全部取min，最后 L&lt;&#x3D;R 即为有解</p>\n<h3 id=\"CODE：\"><a href=\"#CODE：\" class=\"headerlink\" title=\"CODE：\"></a>CODE：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">100001</span>], t[<span class=\"number\">100001</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> al, ar, n;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">int</span> time)</span> </span>&#123;</span><br><span class=\"line\">\tal = <span class=\"number\">-1</span>, ar = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (time - t[i] &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\tal = <span class=\"built_in\">max</span>(al, a[i] - (time - t[i]));</span><br><span class=\"line\">\t\tar = <span class=\"built_in\">min</span>(ar, a[i] + (time - t[i]));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> al &lt;= ar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> T;</span><br><span class=\"line\">    cin &gt;&gt; T;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (T--) &#123;</span><br><span class=\"line\">    \tcin &gt;&gt; n;</span><br><span class=\"line\">    \t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class=\"line\">    \t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) cin &gt;&gt; t[i];</span><br><span class=\"line\">    \t<span class=\"type\">double</span> l = <span class=\"number\">0</span>, r = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">    \t<span class=\"type\">double</span> ans;</span><br><span class=\"line\">    \t<span class=\"keyword\">while</span> (l &lt;= r &amp;&amp; r - l &gt; <span class=\"number\">0.0000001</span>) &#123;</span><br><span class=\"line\">    \t\t<span class=\"type\">double</span> mid = (l + r) / <span class=\"number\">2.0</span>;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">check</span>(mid)) &#123;</span><br><span class=\"line\">    \t\t\tans = (al + ar) / <span class=\"number\">2.0</span>;</span><br><span class=\"line\">    \t\t\tr = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tl = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.6lf\\n&quot;</span>, ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Special Thanks: CZX</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"TJ-时间\"><a href=\"#TJ-时间\" class=\"headerlink\" title=\"TJ 时间\"></a>TJ 时间</h2><h3 id=\"A-题：\"><a href=\"#A-题：\" class=\"headerlink\" title=\"A 题：\"></a>A 题：</h3><p>太水了，解法各种各样，真的没必要将（真的！</p>\n<p>看看<a href=\"https://www.scorpio532992.ltd/2022/09/30/Codeforces-Round823(Div.%202)%5BA.Planets%5D/\">隔壁的TJ</a>吧（真的没必要讲，纯模拟。</p>\n<p>关于隔壁为啥还没有 B 题TJ（DDDD</p>\n<h3 id=\"B-题：\"><a href=\"#B-题：\" class=\"headerlink\" title=\"B 题：\"></a>B 题：</h3><h4 id=\"题意：\"><a href=\"#题意：\" class=\"headerlink\" title=\"题意：\"></a>题意：</h4><p>坐标轴 n 个点，每个点的坐标是 xi (凑合着看吧，我还不会ktext），然而每个点都有一个前提时间 ti，我们需要寻找一个点 x0，使得 所有的 |xi - x0| + ti 中最大的最小。（千万不要理解成加起来最小啊，我就是掉了这个坑！</p>\n<p>那天晚上，想了大约有 15-25 分钟，终于想出这么二分了（题目标签就是二分</p>\n<p>智慧之神 said：二分出一个点。</p>\n<p>我不知道可不可行，但我对此毫无想法（大几率是不可行的</p>\n<p>应该是二分时间。</p>\n<p>思路：<a href=\"https://www.luogu.com.cn/discuss/501749\">Link</a></p>\n<p>看不懂对吧，但是伟大的 <a href=\"https://www.luogu.com.cn/user/186045\">czx</a> 却看懂了。</p>\n<p>详细讲一下吧QAQ</p>\n<p>我们二分的是时间啊，和一些二分题目不同，大部分二分查找题目都是直接二分答案的。</p>\n<p>那么对于第 i 个点</p>\n<p><img src=\"https://pic1.imgdb.cn/item/633839a316f2c2beb1f4b15b.png\" alt=\"zzb\"></p>\n<p>那么距离 xi 长为 mid - ti(mid &gt; ti) 的距离之内的范围所有的点是不是都可以作为 x0 啊（只考虑只有这一点的情况）。</p>\n<p><img src=\"https://pic1.imgdb.cn/item/63383b0616f2c2beb1f7142b.png\" alt=\"zzb\"></p>\n<p>然鹅，有多个点呢？</p>\n<p><img src=\"https://pic1.imgdb.cn/item/63383b9216f2c2beb1f7ae66.png\"></p>\n<p>很明显，就是区间重叠部分，所以<del>我们来个递归，枚举每一个点，找到重叠部分</del>。</p>\n<p>这时，我们就会收到来自 czx 的嘲讽</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？</span><br></pre></td></tr></table></figure>\n\n<p>然后就会收到来自 czx 的温馨提示：左端点全部取max，右端点全部取min，最后 L&lt;&#x3D;R 即为有解</p>\n<h3 id=\"CODE：\"><a href=\"#CODE：\" class=\"headerlink\" title=\"CODE：\"></a>CODE：</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">100001</span>], t[<span class=\"number\">100001</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> al, ar, n;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">bool</span> <span class=\"title\">check</span><span class=\"params\">(<span class=\"type\">int</span> time)</span> </span>&#123;</span><br><span class=\"line\">\tal = <span class=\"number\">-1</span>, ar = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (time - t[i] &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\tal = <span class=\"built_in\">max</span>(al, a[i] - (time - t[i]));</span><br><span class=\"line\">\t\tar = <span class=\"built_in\">min</span>(ar, a[i] + (time - t[i]));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> al &lt;= ar;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\tcout.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> T;</span><br><span class=\"line\">    cin &gt;&gt; T;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (T--) &#123;</span><br><span class=\"line\">    \tcin &gt;&gt; n;</span><br><span class=\"line\">    \t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class=\"line\">    \t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) cin &gt;&gt; t[i];</span><br><span class=\"line\">    \t<span class=\"type\">double</span> l = <span class=\"number\">0</span>, r = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">    \t<span class=\"type\">double</span> ans;</span><br><span class=\"line\">    \t<span class=\"keyword\">while</span> (l &lt;= r &amp;&amp; r - l &gt; <span class=\"number\">0.0000001</span>) &#123;</span><br><span class=\"line\">    \t\t<span class=\"type\">double</span> mid = (l + r) / <span class=\"number\">2.0</span>;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span> (<span class=\"built_in\">check</span>(mid)) &#123;</span><br><span class=\"line\">    \t\t\tans = (al + ar) / <span class=\"number\">2.0</span>;</span><br><span class=\"line\">    \t\t\tr = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t\tl = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.6lf\\n&quot;</span>, ans);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Special Thanks: CZX</p>\n"},{"title":"CSP-2022","date":"2022-11-06T04:12:29.000Z","photos":["/img/csp.jpeg"],"cover":["/img/csp.jpeg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about CSP2022..."},"toc":true,"_content":"\nBoom!!!\n\n比赛“降智”。\n\n### J组\nT4大水题我竟然看都不看就写部分分QAQ。\n\nT2也是炸了，推到一个地方就暴力去解QAQ，看了一下用完全平方公式就可以解（我废了。\n\n（T3不会\n### S组\n\nT1 至今不会\n\nT2 考场上机子被宇宙射线社坏了，在那份代码里，我如果是手动输入就可以正常运行，但如果是粘贴就显示段错误QAQ我怎么荔枝。\n\nT2 本来就想 10-20 分钟骗个部分分，最后竟花了1小时，部分分还没骗到。\n\n# QAQ","source":"_posts/CSP-2022.md","raw":"---\ntitle: CSP-2022\ndate: 2022-11-06 12:12:29\ntags: 记录\ncategories: 记录\nphotos: /img/csp.jpeg\ncover: [/img/csp.jpeg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about CSP2022...\ntoc: true\n---\n\nBoom!!!\n\n比赛“降智”。\n\n### J组\nT4大水题我竟然看都不看就写部分分QAQ。\n\nT2也是炸了，推到一个地方就暴力去解QAQ，看了一下用完全平方公式就可以解（我废了。\n\n（T3不会\n### S组\n\nT1 至今不会\n\nT2 考场上机子被宇宙射线社坏了，在那份代码里，我如果是手动输入就可以正常运行，但如果是粘贴就显示段错误QAQ我怎么荔枝。\n\nT2 本来就想 10-20 分钟骗个部分分，最后竟花了1小时，部分分还没骗到。\n\n# QAQ","slug":"CSP-2022","published":1,"updated":"2024-07-12T09:36:54.591Z","comments":1,"layout":"post","link":"","_id":"clz0heonp00034mu83rifh0bo","content":"<p>Boom!!!</p>\n<p>比赛“降智”。</p>\n<h3 id=\"J组\"><a href=\"#J组\" class=\"headerlink\" title=\"J组\"></a>J组</h3><p>T4大水题我竟然看都不看就写部分分QAQ。</p>\n<p>T2也是炸了，推到一个地方就暴力去解QAQ，看了一下用完全平方公式就可以解（我废了。</p>\n<p>（T3不会</p>\n<h3 id=\"S组\"><a href=\"#S组\" class=\"headerlink\" title=\"S组\"></a>S组</h3><p>T1 至今不会</p>\n<p>T2 考场上机子被宇宙射线社坏了，在那份代码里，我如果是手动输入就可以正常运行，但如果是粘贴就显示段错误QAQ我怎么荔枝。</p>\n<p>T2 本来就想 10-20 分钟骗个部分分，最后竟花了1小时，部分分还没骗到。</p>\n<h1 id=\"QAQ\"><a href=\"#QAQ\" class=\"headerlink\" title=\"QAQ\"></a>QAQ</h1>","site":{"data":{}},"excerpt":"","more":"<p>Boom!!!</p>\n<p>比赛“降智”。</p>\n<h3 id=\"J组\"><a href=\"#J组\" class=\"headerlink\" title=\"J组\"></a>J组</h3><p>T4大水题我竟然看都不看就写部分分QAQ。</p>\n<p>T2也是炸了，推到一个地方就暴力去解QAQ，看了一下用完全平方公式就可以解（我废了。</p>\n<p>（T3不会</p>\n<h3 id=\"S组\"><a href=\"#S组\" class=\"headerlink\" title=\"S组\"></a>S组</h3><p>T1 至今不会</p>\n<p>T2 考场上机子被宇宙射线社坏了，在那份代码里，我如果是手动输入就可以正常运行，但如果是粘贴就显示段错误QAQ我怎么荔枝。</p>\n<p>T2 本来就想 10-20 分钟骗个部分分，最后竟花了1小时，部分分还没骗到。</p>\n<h1 id=\"QAQ\"><a href=\"#QAQ\" class=\"headerlink\" title=\"QAQ\"></a>QAQ</h1>"},{"title":"KMP学习笔记","date":"2023-03-12T05:40:23.000Z","photos":["/img/kmp.png"],"cover":["/img/tj.jpg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about OI..."},"toc":true,"_content":"### 重新定义水博客\n\nborder[y] = x 表示 b[1 ~ x] = b[(y - x + 1) ~ y]\n\n```cpp\ninline void find_border() {\n    int j = 0;\n    for (int i = 2; i <= lb; i++) {\n        while (b[i] != b[j + 1] && j) { //当失配时\n            j = border[j];\n        }\n\n        if (b[i] == b[j + 1]) { //可以加入一个 \n            j++;\n        }\n        border[i] = j;  //储存 \n    }\n}\n```\n\n```cpp\nvoid kmp() {\n    int j = 0;\n    for (int i = 1; i <= la; i++) {\n        while (a[i] != b[j + 1] && j) j = border[j]; //失恋了 \n        if (a[i] == b[j + 1]) j++;  //计入 \n        if (j == lb) cout << i - j + 1 << endl,j = border[j]//防止j超过lb; //匹配van了 \n    }\n}\n```","source":"_posts/KMP学习笔记.md","raw":"---\ntitle: KMP学习笔记\ndate: 2023-03-12 13:40:23\ntags: 学习笔记\ncategories: 学习笔记\nphotos: /img/kmp.png\ncover: [/img/tj.jpg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about OI...\ntoc: true\n---\n### 重新定义水博客\n\nborder[y] = x 表示 b[1 ~ x] = b[(y - x + 1) ~ y]\n\n```cpp\ninline void find_border() {\n    int j = 0;\n    for (int i = 2; i <= lb; i++) {\n        while (b[i] != b[j + 1] && j) { //当失配时\n            j = border[j];\n        }\n\n        if (b[i] == b[j + 1]) { //可以加入一个 \n            j++;\n        }\n        border[i] = j;  //储存 \n    }\n}\n```\n\n```cpp\nvoid kmp() {\n    int j = 0;\n    for (int i = 1; i <= la; i++) {\n        while (a[i] != b[j + 1] && j) j = border[j]; //失恋了 \n        if (a[i] == b[j + 1]) j++;  //计入 \n        if (j == lb) cout << i - j + 1 << endl,j = border[j]//防止j超过lb; //匹配van了 \n    }\n}\n```","slug":"KMP学习笔记","published":1,"updated":"2024-07-18T08:58:49.293Z","comments":1,"layout":"post","link":"","_id":"clz0heons00074mu8f62k3j63","content":"<h3 id=\"重新定义水博客\"><a href=\"#重新定义水博客\" class=\"headerlink\" title=\"重新定义水博客\"></a>重新定义水博客</h3><p>border[y] &#x3D; x 表示 b[1 ~ x] &#x3D; b[(y - x + 1) ~ y]</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">find_border</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= lb; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (b[i] != b[j + <span class=\"number\">1</span>] &amp;&amp; j) &#123; <span class=\"comment\">//当失配时</span></span><br><span class=\"line\">            j = border[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b[i] == b[j + <span class=\"number\">1</span>]) &#123; <span class=\"comment\">//可以加入一个 </span></span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        border[i] = j;  <span class=\"comment\">//储存 </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">kmp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= la; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (a[i] != b[j + <span class=\"number\">1</span>] &amp;&amp; j) j = border[j]; <span class=\"comment\">//失恋了 </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[i] == b[j + <span class=\"number\">1</span>]) j++;  <span class=\"comment\">//计入 </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j == lb) cout &lt;&lt; i - j + <span class=\"number\">1</span> &lt;&lt; endl,j = border[j]<span class=\"comment\">//防止j超过lb; //匹配van了 </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"重新定义水博客\"><a href=\"#重新定义水博客\" class=\"headerlink\" title=\"重新定义水博客\"></a>重新定义水博客</h3><p>border[y] &#x3D; x 表示 b[1 ~ x] &#x3D; b[(y - x + 1) ~ y]</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"type\">void</span> <span class=\"title\">find_border</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= lb; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (b[i] != b[j + <span class=\"number\">1</span>] &amp;&amp; j) &#123; <span class=\"comment\">//当失配时</span></span><br><span class=\"line\">            j = border[j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (b[i] == b[j + <span class=\"number\">1</span>]) &#123; <span class=\"comment\">//可以加入一个 </span></span><br><span class=\"line\">            j++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        border[i] = j;  <span class=\"comment\">//储存 </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">kmp</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> j = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= la; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (a[i] != b[j + <span class=\"number\">1</span>] &amp;&amp; j) j = border[j]; <span class=\"comment\">//失恋了 </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[i] == b[j + <span class=\"number\">1</span>]) j++;  <span class=\"comment\">//计入 </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (j == lb) cout &lt;&lt; i - j + <span class=\"number\">1</span> &lt;&lt; endl,j = border[j]<span class=\"comment\">//防止j超过lb; //匹配van了 </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"PHP环境","date":"2022-12-23T09:56:46.000Z","photos":["/img/php.jpg"],"cover":["/img/php.jpg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about OI..."},"toc":true,"_content":"## 0. 前言\n\nε=(´ο｀*)))唉，为了以后不掉坑，现在做个笔记。\n\n## 1. PHP安装\n\n### 1. 下载 PHP\n\n我的下载：VS16 x64 Non Thread Safe (2022-Dec-06 15:55:22)\n\n官方下载地址：[https://windows.php.n...](https://windows.php.net/download/)\n\n### 2. 修改文件\n\n进入目录，拷贝php.ini-production一份命名为php.ini作为php配置文件\n\n### 3. 配置php.in\n\n#### 设置扩展文件路径，找到extension_dir，去掉前面分号并配置扩展库目录，如：\n```\nextension_dir = \"E:\\php\\env\\php-8.0.3\\ext\"\n```\n#### 根据需求打开gd、mysqli、pdo_mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension=gd2\n#### 设置时区为中国地区，date.timezone =PRC\n#### 设置支持短标签写法，short_open_tag = Off改为short_open_tag = On\n#### 开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号;开启）如下：\n```\ncgi.force_redirect = 1\ncgi.fix_pathinfo=1\ncgi.rfc2616_headers = 0\n```\n#### 配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录\n```\nsession.save_path = \"C:/WINDOWS/Temp\"\n```\n\n然后把这整个文件夹添加到系统变量即可\nPHP -v 可查看版本号\n\n说明：执行php命令若报错：PHP Warning: 'C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll' 14.14 is not compatible......需要Visual Studio 2015、2017 和 2019支持，根据实际情况下载安装。\n\n","source":"_posts/PHP环境.md","raw":"---\ntitle: PHP环境\ndate: 2022-12-23 17:56:46\ntags: 记录\ncategories: 记录\nphotos: /img/php.jpg\ncover: [/img/php.jpg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about OI...\ntoc: true\n---\n## 0. 前言\n\nε=(´ο｀*)))唉，为了以后不掉坑，现在做个笔记。\n\n## 1. PHP安装\n\n### 1. 下载 PHP\n\n我的下载：VS16 x64 Non Thread Safe (2022-Dec-06 15:55:22)\n\n官方下载地址：[https://windows.php.n...](https://windows.php.net/download/)\n\n### 2. 修改文件\n\n进入目录，拷贝php.ini-production一份命名为php.ini作为php配置文件\n\n### 3. 配置php.in\n\n#### 设置扩展文件路径，找到extension_dir，去掉前面分号并配置扩展库目录，如：\n```\nextension_dir = \"E:\\php\\env\\php-8.0.3\\ext\"\n```\n#### 根据需求打开gd、mysqli、pdo_mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension=gd2\n#### 设置时区为中国地区，date.timezone =PRC\n#### 设置支持短标签写法，short_open_tag = Off改为short_open_tag = On\n#### 开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号;开启）如下：\n```\ncgi.force_redirect = 1\ncgi.fix_pathinfo=1\ncgi.rfc2616_headers = 0\n```\n#### 配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录\n```\nsession.save_path = \"C:/WINDOWS/Temp\"\n```\n\n然后把这整个文件夹添加到系统变量即可\nPHP -v 可查看版本号\n\n说明：执行php命令若报错：PHP Warning: 'C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll' 14.14 is not compatible......需要Visual Studio 2015、2017 和 2019支持，根据实际情况下载安装。\n\n","slug":"PHP环境","published":1,"updated":"2024-07-18T08:58:15.350Z","comments":1,"layout":"post","link":"","_id":"clz0heont00094mu84y5wccq2","content":"<h2 id=\"0-前言\"><a href=\"#0-前言\" class=\"headerlink\" title=\"0. 前言\"></a>0. 前言</h2><p>ε&#x3D;(´ο｀*)))唉，为了以后不掉坑，现在做个笔记。</p>\n<h2 id=\"1-PHP安装\"><a href=\"#1-PHP安装\" class=\"headerlink\" title=\"1. PHP安装\"></a>1. PHP安装</h2><h3 id=\"1-下载-PHP\"><a href=\"#1-下载-PHP\" class=\"headerlink\" title=\"1. 下载 PHP\"></a>1. 下载 PHP</h3><p>我的下载：VS16 x64 Non Thread Safe (2022-Dec-06 15:55:22)</p>\n<p>官方下载地址：<a href=\"https://windows.php.net/download/\">https://windows.php.n...</a></p>\n<h3 id=\"2-修改文件\"><a href=\"#2-修改文件\" class=\"headerlink\" title=\"2. 修改文件\"></a>2. 修改文件</h3><p>进入目录，拷贝php.ini-production一份命名为php.ini作为php配置文件</p>\n<h3 id=\"3-配置php-in\"><a href=\"#3-配置php-in\" class=\"headerlink\" title=\"3. 配置php.in\"></a>3. 配置php.in</h3><h4 id=\"设置扩展文件路径，找到extension-dir，去掉前面分号并配置扩展库目录，如：\"><a href=\"#设置扩展文件路径，找到extension-dir，去掉前面分号并配置扩展库目录，如：\" class=\"headerlink\" title=\"设置扩展文件路径，找到extension_dir，去掉前面分号并配置扩展库目录，如：\"></a>设置扩展文件路径，找到extension_dir，去掉前面分号并配置扩展库目录，如：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extension_dir = &quot;E:\\php\\env\\php-8.0.3\\ext&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"根据需求打开gd、mysqli、pdo-mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension-gd2\"><a href=\"#根据需求打开gd、mysqli、pdo-mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension-gd2\" class=\"headerlink\" title=\"根据需求打开gd、mysqli、pdo_mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension&#x3D;gd2\"></a>根据需求打开gd、mysqli、pdo_mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension&#x3D;gd2</h4><h4 id=\"设置时区为中国地区，date-timezone-PRC\"><a href=\"#设置时区为中国地区，date-timezone-PRC\" class=\"headerlink\" title=\"设置时区为中国地区，date.timezone &#x3D;PRC\"></a>设置时区为中国地区，date.timezone &#x3D;PRC</h4><h4 id=\"设置支持短标签写法，short-open-tag-Off改为short-open-tag-On\"><a href=\"#设置支持短标签写法，short-open-tag-Off改为short-open-tag-On\" class=\"headerlink\" title=\"设置支持短标签写法，short_open_tag &#x3D; Off改为short_open_tag &#x3D; On\"></a>设置支持短标签写法，short_open_tag &#x3D; Off改为short_open_tag &#x3D; On</h4><h4 id=\"开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号-开启）如下：\"><a href=\"#开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号-开启）如下：\" class=\"headerlink\" title=\"开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号;开启）如下：\"></a>开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号;开启）如下：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cgi.force_redirect = 1</span><br><span class=\"line\">cgi.fix_pathinfo=1</span><br><span class=\"line\">cgi.rfc2616_headers = 0</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录\"><a href=\"#配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录\" class=\"headerlink\" title=\"配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录\"></a>配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session.save_path = &quot;C:/WINDOWS/Temp&quot;</span><br></pre></td></tr></table></figure>\n\n<p>然后把这整个文件夹添加到系统变量即可<br>PHP -v 可查看版本号</p>\n<p>说明：执行php命令若报错：PHP Warning: ‘C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll’ 14.14 is not compatible……需要Visual Studio 2015、2017 和 2019支持，根据实际情况下载安装。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"0-前言\"><a href=\"#0-前言\" class=\"headerlink\" title=\"0. 前言\"></a>0. 前言</h2><p>ε&#x3D;(´ο｀*)))唉，为了以后不掉坑，现在做个笔记。</p>\n<h2 id=\"1-PHP安装\"><a href=\"#1-PHP安装\" class=\"headerlink\" title=\"1. PHP安装\"></a>1. PHP安装</h2><h3 id=\"1-下载-PHP\"><a href=\"#1-下载-PHP\" class=\"headerlink\" title=\"1. 下载 PHP\"></a>1. 下载 PHP</h3><p>我的下载：VS16 x64 Non Thread Safe (2022-Dec-06 15:55:22)</p>\n<p>官方下载地址：<a href=\"https://windows.php.net/download/\">https://windows.php.n...</a></p>\n<h3 id=\"2-修改文件\"><a href=\"#2-修改文件\" class=\"headerlink\" title=\"2. 修改文件\"></a>2. 修改文件</h3><p>进入目录，拷贝php.ini-production一份命名为php.ini作为php配置文件</p>\n<h3 id=\"3-配置php-in\"><a href=\"#3-配置php-in\" class=\"headerlink\" title=\"3. 配置php.in\"></a>3. 配置php.in</h3><h4 id=\"设置扩展文件路径，找到extension-dir，去掉前面分号并配置扩展库目录，如：\"><a href=\"#设置扩展文件路径，找到extension-dir，去掉前面分号并配置扩展库目录，如：\" class=\"headerlink\" title=\"设置扩展文件路径，找到extension_dir，去掉前面分号并配置扩展库目录，如：\"></a>设置扩展文件路径，找到extension_dir，去掉前面分号并配置扩展库目录，如：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extension_dir = &quot;E:\\php\\env\\php-8.0.3\\ext&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"根据需求打开gd、mysqli、pdo-mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension-gd2\"><a href=\"#根据需求打开gd、mysqli、pdo-mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension-gd2\" class=\"headerlink\" title=\"根据需求打开gd、mysqli、pdo_mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension&#x3D;gd2\"></a>根据需求打开gd、mysqli、pdo_mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension&#x3D;gd2</h4><h4 id=\"设置时区为中国地区，date-timezone-PRC\"><a href=\"#设置时区为中国地区，date-timezone-PRC\" class=\"headerlink\" title=\"设置时区为中国地区，date.timezone &#x3D;PRC\"></a>设置时区为中国地区，date.timezone &#x3D;PRC</h4><h4 id=\"设置支持短标签写法，short-open-tag-Off改为short-open-tag-On\"><a href=\"#设置支持短标签写法，short-open-tag-Off改为short-open-tag-On\" class=\"headerlink\" title=\"设置支持短标签写法，short_open_tag &#x3D; Off改为short_open_tag &#x3D; On\"></a>设置支持短标签写法，short_open_tag &#x3D; Off改为short_open_tag &#x3D; On</h4><h4 id=\"开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号-开启）如下：\"><a href=\"#开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号-开启）如下：\" class=\"headerlink\" title=\"开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号;开启）如下：\"></a>开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号;开启）如下：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cgi.force_redirect = 1</span><br><span class=\"line\">cgi.fix_pathinfo=1</span><br><span class=\"line\">cgi.rfc2616_headers = 0</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录\"><a href=\"#配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录\" class=\"headerlink\" title=\"配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录\"></a>配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">session.save_path = &quot;C:/WINDOWS/Temp&quot;</span><br></pre></td></tr></table></figure>\n\n<p>然后把这整个文件夹添加到系统变量即可<br>PHP -v 可查看版本号</p>\n<p>说明：执行php命令若报错：PHP Warning: ‘C:\\Windows\\SYSTEM32\\VCRUNTIME140.dll’ 14.14 is not compatible……需要Visual Studio 2015、2017 和 2019支持，根据实际情况下载安装。</p>\n"},{"title":"Ubuntu更换开机动画为Elaina","date":"2023-08-15T12:19:53.000Z","_content":"## 开始前\n\n\n作者使用 **Ubuntu 22.04.3 LTS**，教程开始前请判断您的 Ubuntu 是否使用 **Plymouth**!\n\n\n## 准备\n作者已经帮您整合好 Elaina 主题，您需要下载其 [方式1](https://blog.acerkaio.top/download/Elaina.zip) | [方式2 (可能更快)](https://vercel.acerkaio.top/download/Elaina.zip)\n\n## 更改文件夹权限\n\n下载后，我们打开 /usr/share/plymouth/\n\n为了方便，我们使用以下命令更改文件夹权限：\n\n```\nsudo chown -R <你的用户名>:<你的用户名> /usr/share/plymouth/themes/\n```\n## 具体操作\n\n打开 themes 文件夹，将下载的 Elaina.zip 解压到这里为 Elaina 文件夹。\n\n先使用：\n\n```\nsudo apt-get install plymouth-theme*\n```\n\n然后使用\n\n```\nsudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/Elaina/ubuntu-gnome-logo.plymouth 150\n\n```\n\n接着使用以下命令并找到 Elaina 有关字段，填写编号。\n```\nsudo update-alternatives --config default.plymouth\n```\n最后生效（可能会等久一点）：\n\n```\nsudo update-initramfs -u\nsudo update-grub\nreboot\n```\n\n您也可以将其中的 PNG 文件做适当更改。","source":"_posts/Ubuntu更换开机动画.md","raw":"---\ntitle: Ubuntu更换开机动画为Elaina\ndate: 2023-08-15 20:19:53\ntags: 记录\ncategories: 记录\n---\n## 开始前\n\n\n作者使用 **Ubuntu 22.04.3 LTS**，教程开始前请判断您的 Ubuntu 是否使用 **Plymouth**!\n\n\n## 准备\n作者已经帮您整合好 Elaina 主题，您需要下载其 [方式1](https://blog.acerkaio.top/download/Elaina.zip) | [方式2 (可能更快)](https://vercel.acerkaio.top/download/Elaina.zip)\n\n## 更改文件夹权限\n\n下载后，我们打开 /usr/share/plymouth/\n\n为了方便，我们使用以下命令更改文件夹权限：\n\n```\nsudo chown -R <你的用户名>:<你的用户名> /usr/share/plymouth/themes/\n```\n## 具体操作\n\n打开 themes 文件夹，将下载的 Elaina.zip 解压到这里为 Elaina 文件夹。\n\n先使用：\n\n```\nsudo apt-get install plymouth-theme*\n```\n\n然后使用\n\n```\nsudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/Elaina/ubuntu-gnome-logo.plymouth 150\n\n```\n\n接着使用以下命令并找到 Elaina 有关字段，填写编号。\n```\nsudo update-alternatives --config default.plymouth\n```\n最后生效（可能会等久一点）：\n\n```\nsudo update-initramfs -u\nsudo update-grub\nreboot\n```\n\n您也可以将其中的 PNG 文件做适当更改。","slug":"Ubuntu更换开机动画","published":1,"updated":"2023-08-22T11:41:24.124Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clz0heonv000b4mu8ah9v89wi","content":"<h2 id=\"开始前\"><a href=\"#开始前\" class=\"headerlink\" title=\"开始前\"></a>开始前</h2><p>作者使用 <strong>Ubuntu 22.04.3 LTS</strong>，教程开始前请判断您的 Ubuntu 是否使用 <strong>Plymouth</strong>!</p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>作者已经帮您整合好 Elaina 主题，您需要下载其 <a href=\"https://blog.acerkaio.top/download/Elaina.zip\">方式1</a> | <a href=\"https://vercel.acerkaio.top/download/Elaina.zip\">方式2 (可能更快)</a></p>\n<h2 id=\"更改文件夹权限\"><a href=\"#更改文件夹权限\" class=\"headerlink\" title=\"更改文件夹权限\"></a>更改文件夹权限</h2><p>下载后，我们打开 &#x2F;usr&#x2F;share&#x2F;plymouth&#x2F;</p>\n<p>为了方便，我们使用以下命令更改文件夹权限：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R &lt;你的用户名&gt;:&lt;你的用户名&gt; /usr/share/plymouth/themes/</span><br></pre></td></tr></table></figure>\n<h2 id=\"具体操作\"><a href=\"#具体操作\" class=\"headerlink\" title=\"具体操作\"></a>具体操作</h2><p>打开 themes 文件夹，将下载的 Elaina.zip 解压到这里为 Elaina 文件夹。</p>\n<p>先使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install plymouth-theme*</span><br></pre></td></tr></table></figure>\n\n<p>然后使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/Elaina/ubuntu-gnome-logo.plymouth 150</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>接着使用以下命令并找到 Elaina 有关字段，填写编号。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --config default.plymouth</span><br></pre></td></tr></table></figure>\n<p>最后生效（可能会等久一点）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-initramfs -u</span><br><span class=\"line\">sudo update-grub</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<p>您也可以将其中的 PNG 文件做适当更改。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"开始前\"><a href=\"#开始前\" class=\"headerlink\" title=\"开始前\"></a>开始前</h2><p>作者使用 <strong>Ubuntu 22.04.3 LTS</strong>，教程开始前请判断您的 Ubuntu 是否使用 <strong>Plymouth</strong>!</p>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><p>作者已经帮您整合好 Elaina 主题，您需要下载其 <a href=\"https://blog.acerkaio.top/download/Elaina.zip\">方式1</a> | <a href=\"https://vercel.acerkaio.top/download/Elaina.zip\">方式2 (可能更快)</a></p>\n<h2 id=\"更改文件夹权限\"><a href=\"#更改文件夹权限\" class=\"headerlink\" title=\"更改文件夹权限\"></a>更改文件夹权限</h2><p>下载后，我们打开 &#x2F;usr&#x2F;share&#x2F;plymouth&#x2F;</p>\n<p>为了方便，我们使用以下命令更改文件夹权限：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chown -R &lt;你的用户名&gt;:&lt;你的用户名&gt; /usr/share/plymouth/themes/</span><br></pre></td></tr></table></figure>\n<h2 id=\"具体操作\"><a href=\"#具体操作\" class=\"headerlink\" title=\"具体操作\"></a>具体操作</h2><p>打开 themes 文件夹，将下载的 Elaina.zip 解压到这里为 Elaina 文件夹。</p>\n<p>先使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install plymouth-theme*</span><br></pre></td></tr></table></figure>\n\n<p>然后使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/Elaina/ubuntu-gnome-logo.plymouth 150</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>接着使用以下命令并找到 Elaina 有关字段，填写编号。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-alternatives --config default.plymouth</span><br></pre></td></tr></table></figure>\n<p>最后生效（可能会等久一点）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-initramfs -u</span><br><span class=\"line\">sudo update-grub</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n\n<p>您也可以将其中的 PNG 文件做适当更改。</p>\n"},{"date":"2022-08-29T16:00:00.000Z","title":"Hello World","photos":["https://pic.imgdb.cn/item/630df91e16f2c2beb115db40.jpg"],"cover":["https://pic.imgdb.cn/item/630df91e16f2c2beb115db40.jpg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about my life..."},"toc":true,"_content":"HEXO 博客今天终于搭建好了，采用了 hexo-theme-async 。\n\n本博客将不采用评论，如需联系，请点击 CONTACT ME。 ","source":"_posts/hello-world.md","raw":"---\ndate: 2022/8/30 0:00\ntitle: Hello World\nphotos: https://pic.imgdb.cn/item/630df91e16f2c2beb115db40.jpg\ncover: [https://pic.imgdb.cn/item/630df91e16f2c2beb115db40.jpg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about my life...\ntoc: true\n---\nHEXO 博客今天终于搭建好了，采用了 hexo-theme-async 。\n\n本博客将不采用评论，如需联系，请点击 CONTACT ME。 ","slug":"hello-world","published":1,"updated":"2024-07-13T02:27:16.352Z","comments":1,"layout":"post","link":"","_id":"clz0heonx000g4mu8c7plfj3i","content":"<p>HEXO 博客今天终于搭建好了，采用了 hexo-theme-async 。</p>\n<p>本博客将不采用评论，如需联系，请点击 CONTACT ME。 </p>\n","site":{"data":{}},"excerpt":"","more":"<p>HEXO 博客今天终于搭建好了，采用了 hexo-theme-async 。</p>\n<p>本博客将不采用评论，如需联系，请点击 CONTACT ME。 </p>\n"},{"title":"关于Simple-Luogu","date":"2022-08-30T10:18:49.000Z","cover":["/img/simple-luogu.jpg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about Simple Luogu..."},"toc":true,"_content":"## 没错，一款崭新的洛谷样式，是我在开发 Smart-Luogu 后积累了许多经验后继而开发的简洁小清新样式。\n\n## 整体外观十分清爽，不少处也有意想不到的动画、效果。\n\n### 来体验一下吧：\n\n![](https://pic.imgdb.cn/item/630df8b816f2c2beb115a012.png)\n\n目前还没有官网，来 [Link](https://userstyles.world/style/6062/simple-luogu-smart-luogu)。","source":"_posts/关于Simple-Luogu.md","raw":"---\ntitle: 关于Simple-Luogu\ndate: 2022-08-30 18:18:49\ntags: 创作\ncategories: 创作\ncover: [/img/simple-luogu.jpg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about Simple Luogu...\ntoc: true\n\n---\n## 没错，一款崭新的洛谷样式，是我在开发 Smart-Luogu 后积累了许多经验后继而开发的简洁小清新样式。\n\n## 整体外观十分清爽，不少处也有意想不到的动画、效果。\n\n### 来体验一下吧：\n\n![](https://pic.imgdb.cn/item/630df8b816f2c2beb115a012.png)\n\n目前还没有官网，来 [Link](https://userstyles.world/style/6062/simple-luogu-smart-luogu)。","slug":"关于Simple-Luogu","published":1,"updated":"2024-07-12T09:36:36.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clz0heony000h4mu8de7817vn","content":"<h2 id=\"没错，一款崭新的洛谷样式，是我在开发-Smart-Luogu-后积累了许多经验后继而开发的简洁小清新样式。\"><a href=\"#没错，一款崭新的洛谷样式，是我在开发-Smart-Luogu-后积累了许多经验后继而开发的简洁小清新样式。\" class=\"headerlink\" title=\"没错，一款崭新的洛谷样式，是我在开发 Smart-Luogu 后积累了许多经验后继而开发的简洁小清新样式。\"></a>没错，一款崭新的洛谷样式，是我在开发 Smart-Luogu 后积累了许多经验后继而开发的简洁小清新样式。</h2><h2 id=\"整体外观十分清爽，不少处也有意想不到的动画、效果。\"><a href=\"#整体外观十分清爽，不少处也有意想不到的动画、效果。\" class=\"headerlink\" title=\"整体外观十分清爽，不少处也有意想不到的动画、效果。\"></a>整体外观十分清爽，不少处也有意想不到的动画、效果。</h2><h3 id=\"来体验一下吧：\"><a href=\"#来体验一下吧：\" class=\"headerlink\" title=\"来体验一下吧：\"></a>来体验一下吧：</h3><p><img src=\"https://pic.imgdb.cn/item/630df8b816f2c2beb115a012.png\"  data-tag='post-image' loading=\"lazy\" onerror='this.onerror=null;this.src=\"/img/404.jpg\"'></p>\n<p>目前还没有官网，来 <a href=\"https://userstyles.world/style/6062/simple-luogu-smart-luogu\">Link</a>。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"没错，一款崭新的洛谷样式，是我在开发-Smart-Luogu-后积累了许多经验后继而开发的简洁小清新样式。\"><a href=\"#没错，一款崭新的洛谷样式，是我在开发-Smart-Luogu-后积累了许多经验后继而开发的简洁小清新样式。\" class=\"headerlink\" title=\"没错，一款崭新的洛谷样式，是我在开发 Smart-Luogu 后积累了许多经验后继而开发的简洁小清新样式。\"></a>没错，一款崭新的洛谷样式，是我在开发 Smart-Luogu 后积累了许多经验后继而开发的简洁小清新样式。</h2><h2 id=\"整体外观十分清爽，不少处也有意想不到的动画、效果。\"><a href=\"#整体外观十分清爽，不少处也有意想不到的动画、效果。\" class=\"headerlink\" title=\"整体外观十分清爽，不少处也有意想不到的动画、效果。\"></a>整体外观十分清爽，不少处也有意想不到的动画、效果。</h2><h3 id=\"来体验一下吧：\"><a href=\"#来体验一下吧：\" class=\"headerlink\" title=\"来体验一下吧：\"></a>来体验一下吧：</h3><p><img src=\"https://pic.imgdb.cn/item/630df8b816f2c2beb115a012.png\"></p>\n<p>目前还没有官网，来 <a href=\"https://userstyles.world/style/6062/simple-luogu-smart-luogu\">Link</a>。</p>\n"},{"title":"国产系统Deepin20初体验","date":"2023-01-25T12:03:04.000Z","photos":["/img/deepin.png"],"cover":["/img/deepin.png"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about Deepin..."},"toc":true,"_content":"## ISO 文件下载\n这里给个下载地址哦：[https://www.deepin.org/zh/download/](https://www.deepin.org/zh/download/)。\n\n## 浅谈一下\n\n先说优点：\n\n1. 界面简洁，作为图形化操作系统，简洁是一大看点。\n\n2. 对于使用者友好，安装引导人性化。\n\n3. 免费。\n\n缺点：\n\n1. 感觉界面设计令人失望，大圆角使其显得臃肿。\n\n2. 功能不够完善。\n\n3. 五子棋机器人太菜了。\n\n![Acerkaio qwq](https://pic.imgdb.cn/item/63d11eecface21e9ef7e8f66.png)\n\n还有一点：我把缩小动画换成什么魔灯然后缩小一个界面就死机了，现在一开机就黑屏。qwq","source":"_posts/国产系统Deepin20初体验.md","raw":"---\ntitle: 国产系统Deepin20初体验\ndate: 2023-01-25 20:03:04\ntags: 记录\ncategories: 记录\nphotos: /img/deepin.png\ncover: [/img/deepin.png]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about Deepin...\ntoc: true\n---\n## ISO 文件下载\n这里给个下载地址哦：[https://www.deepin.org/zh/download/](https://www.deepin.org/zh/download/)。\n\n## 浅谈一下\n\n先说优点：\n\n1. 界面简洁，作为图形化操作系统，简洁是一大看点。\n\n2. 对于使用者友好，安装引导人性化。\n\n3. 免费。\n\n缺点：\n\n1. 感觉界面设计令人失望，大圆角使其显得臃肿。\n\n2. 功能不够完善。\n\n3. 五子棋机器人太菜了。\n\n![Acerkaio qwq](https://pic.imgdb.cn/item/63d11eecface21e9ef7e8f66.png)\n\n还有一点：我把缩小动画换成什么魔灯然后缩小一个界面就死机了，现在一开机就黑屏。qwq","slug":"国产系统Deepin20初体验","published":1,"updated":"2024-07-12T09:36:59.199Z","comments":1,"layout":"post","link":"","_id":"clz0heonz000l4mu8651k0wit","content":"<h2 id=\"ISO-文件下载\"><a href=\"#ISO-文件下载\" class=\"headerlink\" title=\"ISO 文件下载\"></a>ISO 文件下载</h2><p>这里给个下载地址哦：<a href=\"https://www.deepin.org/zh/download/\">https://www.deepin.org/zh/download/</a>。</p>\n<h2 id=\"浅谈一下\"><a href=\"#浅谈一下\" class=\"headerlink\" title=\"浅谈一下\"></a>浅谈一下</h2><p>先说优点：</p>\n<ol>\n<li><p>界面简洁，作为图形化操作系统，简洁是一大看点。</p>\n</li>\n<li><p>对于使用者友好，安装引导人性化。</p>\n</li>\n<li><p>免费。</p>\n</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li><p>感觉界面设计令人失望，大圆角使其显得臃肿。</p>\n</li>\n<li><p>功能不够完善。</p>\n</li>\n<li><p>五子棋机器人太菜了。</p>\n</li>\n</ol>\n<p><img src=\"https://pic.imgdb.cn/item/63d11eecface21e9ef7e8f66.png\" alt=\"Acerkaio qwq\"  data-tag='post-image' loading=\"lazy\" onerror='this.onerror=null;this.src=\"/img/404.jpg\"'></p>\n<p>还有一点：我把缩小动画换成什么魔灯然后缩小一个界面就死机了，现在一开机就黑屏。qwq</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"ISO-文件下载\"><a href=\"#ISO-文件下载\" class=\"headerlink\" title=\"ISO 文件下载\"></a>ISO 文件下载</h2><p>这里给个下载地址哦：<a href=\"https://www.deepin.org/zh/download/\">https://www.deepin.org/zh/download/</a>。</p>\n<h2 id=\"浅谈一下\"><a href=\"#浅谈一下\" class=\"headerlink\" title=\"浅谈一下\"></a>浅谈一下</h2><p>先说优点：</p>\n<ol>\n<li><p>界面简洁，作为图形化操作系统，简洁是一大看点。</p>\n</li>\n<li><p>对于使用者友好，安装引导人性化。</p>\n</li>\n<li><p>免费。</p>\n</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li><p>感觉界面设计令人失望，大圆角使其显得臃肿。</p>\n</li>\n<li><p>功能不够完善。</p>\n</li>\n<li><p>五子棋机器人太菜了。</p>\n</li>\n</ol>\n<p><img src=\"https://pic.imgdb.cn/item/63d11eecface21e9ef7e8f66.png\" alt=\"Acerkaio qwq\"></p>\n<p>还有一点：我把缩小动画换成什么魔灯然后缩小一个界面就死机了，现在一开机就黑屏。qwq</p>\n"},{"title":"扫描线学习笔记","date":"2024-01-14T13:45:03.000Z","cover":["/img/tj.jpg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about OI..."},"toc":true,"_content":"\n待补\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#define int long long\n#define ls root << 1\n#define rs root << 1 | 1\n\nusing namespace std;\nconst int _ = 1e5 + 7;\n\n// rectangle\nstruct Rectangle {\n    int x, y1, y2, k;\n} R[_ << 1];\n// Segment\nstruct Segment {\n    int len = 0, cnt = 0;\n} T[_ << 4];\n\nint n, c[_], raw[_], val[_], Y[_], NoY = 0;\n\nbool cmp(Rectangle A, Rectangle B) {\n    if (A.x == B.x)\n        return rand() % 2; //lol\n    return A.x < B.x;\n}\n\nvoid Push_Up(int root, int l, int r);\nvoid Change(int root, int l, int r, int L, int R, int val);\nint Queue(int root, int l, int r, int L, int R);\n\nsigned main() {\n    srand(time(0));\n    ios::sync_with_stdio(0);cin.tie(0);\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        int x1, x2, y1, y2;\n        cin >> x1 >> y1 >> x2 >> y2;\n        R[i * 2 - 1] = (Rectangle){x1, y1, y2, 1};\n        R[i * 2] = (Rectangle){x2, y1, y2, -1};\n        Y[i * 2 - 1] = y1;\n        Y[i * 2] = y2;\n    }\n    sort(R + 1, R + 2 * n + 1, cmp);\n    sort(Y + 1, Y + 2 * n + 1);\n    int ans = 0, NoY = unique(Y + 1, Y + 2 * n + 1) - Y - 1;\n\n    for (int i = 1; i < 2 * n /*最后一边 k 是 -1 不需要统计*/; i++) {\n        // 所有 x 相等的情况只会记入最后一次，即如果 R[i].x == R[i + 1].x 则 R[i + 1].x - R[i].x == 0.\n        Change(1, 1, NoY - 1, R[i].y1, R[i].y2, R[i].k);\n        ans = ans + (T[1].len * (R[i + 1].x - R[i].x));\n    }\n    cout << ans << '\\n';\n    return 0;\n}   \n\nvoid Push_Up(int root, int l, int r) {\n    if (T[root].cnt > 0) {\n        T[root].len = Y[r + 1] - Y[l];\n    } else {\n        T[root].len = T[ls].len + T[rs].len;\n    }\n}\n// Y 是离散数组，在 Y 内，每个出现的 Y 值都有出现且递增排序。\nvoid Change(int root, int l, int r, int L, int R, int val) {\n    if (Y[r + 1] <= L || R <= Y[l]) return ;\n    if (L <= Y[l] && Y[r + 1] <= R) {\n        T[root].cnt += val;\n        Push_Up(root, l, r);\n        return ;\n    }\n    int mid = l + r >> 1;\n    Change(ls, l, mid, L, R, val);\n    Change(rs, mid + 1, r, L, R, val);\n    Push_Up(root, l, r);\n}\nint Queue(int root, int l, int r, int L, int R) {\n    // lol\n    return 0ll;\n}\n```","source":"_posts/扫描线学习笔记.md","raw":"---\ntitle: 扫描线学习笔记\ndate: 2024-01-14 21:45:03\ntags: 学习笔记\ncategories: 学习笔记\n\ncover: [/img/tj.jpg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about OI...\ntoc: true\n---\n\n待补\n\n```cpp\n#include <iostream>\n#include <algorithm>\n#include <cmath>\n#define int long long\n#define ls root << 1\n#define rs root << 1 | 1\n\nusing namespace std;\nconst int _ = 1e5 + 7;\n\n// rectangle\nstruct Rectangle {\n    int x, y1, y2, k;\n} R[_ << 1];\n// Segment\nstruct Segment {\n    int len = 0, cnt = 0;\n} T[_ << 4];\n\nint n, c[_], raw[_], val[_], Y[_], NoY = 0;\n\nbool cmp(Rectangle A, Rectangle B) {\n    if (A.x == B.x)\n        return rand() % 2; //lol\n    return A.x < B.x;\n}\n\nvoid Push_Up(int root, int l, int r);\nvoid Change(int root, int l, int r, int L, int R, int val);\nint Queue(int root, int l, int r, int L, int R);\n\nsigned main() {\n    srand(time(0));\n    ios::sync_with_stdio(0);cin.tie(0);\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        int x1, x2, y1, y2;\n        cin >> x1 >> y1 >> x2 >> y2;\n        R[i * 2 - 1] = (Rectangle){x1, y1, y2, 1};\n        R[i * 2] = (Rectangle){x2, y1, y2, -1};\n        Y[i * 2 - 1] = y1;\n        Y[i * 2] = y2;\n    }\n    sort(R + 1, R + 2 * n + 1, cmp);\n    sort(Y + 1, Y + 2 * n + 1);\n    int ans = 0, NoY = unique(Y + 1, Y + 2 * n + 1) - Y - 1;\n\n    for (int i = 1; i < 2 * n /*最后一边 k 是 -1 不需要统计*/; i++) {\n        // 所有 x 相等的情况只会记入最后一次，即如果 R[i].x == R[i + 1].x 则 R[i + 1].x - R[i].x == 0.\n        Change(1, 1, NoY - 1, R[i].y1, R[i].y2, R[i].k);\n        ans = ans + (T[1].len * (R[i + 1].x - R[i].x));\n    }\n    cout << ans << '\\n';\n    return 0;\n}   \n\nvoid Push_Up(int root, int l, int r) {\n    if (T[root].cnt > 0) {\n        T[root].len = Y[r + 1] - Y[l];\n    } else {\n        T[root].len = T[ls].len + T[rs].len;\n    }\n}\n// Y 是离散数组，在 Y 内，每个出现的 Y 值都有出现且递增排序。\nvoid Change(int root, int l, int r, int L, int R, int val) {\n    if (Y[r + 1] <= L || R <= Y[l]) return ;\n    if (L <= Y[l] && Y[r + 1] <= R) {\n        T[root].cnt += val;\n        Push_Up(root, l, r);\n        return ;\n    }\n    int mid = l + r >> 1;\n    Change(ls, l, mid, L, R, val);\n    Change(rs, mid + 1, r, L, R, val);\n    Push_Up(root, l, r);\n}\nint Queue(int root, int l, int r, int L, int R) {\n    // lol\n    return 0ll;\n}\n```","slug":"扫描线学习笔记","published":1,"updated":"2024-07-12T09:39:24.227Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clz0heoo0000n4mu8hrr1a3pd","content":"<p>待补</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ls root &lt;&lt; 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> rs root &lt;&lt; 1 | 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> _ = <span class=\"number\">1e5</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// rectangle</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Rectangle</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x, y1, y2, k;</span><br><span class=\"line\">&#125; R[_ &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">// Segment</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Segment</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"number\">0</span>, cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; T[_ &lt;&lt; <span class=\"number\">4</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, c[_], raw[_], val[_], Y[_], NoY = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(Rectangle A, Rectangle B)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.x == B.x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">rand</span>() % <span class=\"number\">2</span>; <span class=\"comment\">//lol</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> A.x &lt; B.x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Push_Up</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Change</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R, <span class=\"type\">int</span> val)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Queue</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">    ios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);cin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x1, x2, y1, y2;</span><br><span class=\"line\">        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class=\"line\">        R[i * <span class=\"number\">2</span> - <span class=\"number\">1</span>] = (Rectangle)&#123;x1, y1, y2, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">        R[i * <span class=\"number\">2</span>] = (Rectangle)&#123;x2, y1, y2, <span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\">        Y[i * <span class=\"number\">2</span> - <span class=\"number\">1</span>] = y1;</span><br><span class=\"line\">        Y[i * <span class=\"number\">2</span>] = y2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(R + <span class=\"number\">1</span>, R + <span class=\"number\">2</span> * n + <span class=\"number\">1</span>, cmp);</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(Y + <span class=\"number\">1</span>, Y + <span class=\"number\">2</span> * n + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> ans = <span class=\"number\">0</span>, NoY = <span class=\"built_in\">unique</span>(Y + <span class=\"number\">1</span>, Y + <span class=\"number\">2</span> * n + <span class=\"number\">1</span>) - Y - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">2</span> * n <span class=\"comment\">/*最后一边 k 是 -1 不需要统计*/</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 所有 x 相等的情况只会记入最后一次，即如果 R[i].x == R[i + 1].x 则 R[i + 1].x - R[i].x == 0.</span></span><br><span class=\"line\">        <span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, NoY - <span class=\"number\">1</span>, R[i].y1, R[i].y2, R[i].k);</span><br><span class=\"line\">        ans = ans + (T[<span class=\"number\">1</span>].len * (R[i + <span class=\"number\">1</span>].x - R[i].x));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Push_Up</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (T[root].cnt &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        T[root].len = Y[r + <span class=\"number\">1</span>] - Y[l];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        T[root].len = T[ls].len + T[rs].len;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Y 是离散数组，在 Y 内，每个出现的 Y 值都有出现且递增排序。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Change</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Y[r + <span class=\"number\">1</span>] &lt;= L || R &lt;= Y[l]) <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (L &lt;= Y[l] &amp;&amp; Y[r + <span class=\"number\">1</span>] &lt;= R) &#123;</span><br><span class=\"line\">        T[root].cnt += val;</span><br><span class=\"line\">        <span class=\"built_in\">Push_Up</span>(root, l, r);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">Change</span>(ls, l, mid, L, R, val);</span><br><span class=\"line\">    <span class=\"built_in\">Change</span>(rs, mid + <span class=\"number\">1</span>, r, L, R, val);</span><br><span class=\"line\">    <span class=\"built_in\">Push_Up</span>(root, l, r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Queue</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// lol</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0ll</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>待补</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ls root &lt;&lt; 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> rs root &lt;&lt; 1 | 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> _ = <span class=\"number\">1e5</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// rectangle</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Rectangle</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x, y1, y2, k;</span><br><span class=\"line\">&#125; R[_ &lt;&lt; <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">// Segment</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Segment</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"number\">0</span>, cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; T[_ &lt;&lt; <span class=\"number\">4</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, c[_], raw[_], val[_], Y[_], NoY = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(Rectangle A, Rectangle B)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.x == B.x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">rand</span>() % <span class=\"number\">2</span>; <span class=\"comment\">//lol</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> A.x &lt; B.x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Push_Up</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Change</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R, <span class=\"type\">int</span> val)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Queue</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">srand</span>(<span class=\"built_in\">time</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">    ios::<span class=\"built_in\">sync_with_stdio</span>(<span class=\"number\">0</span>);cin.<span class=\"built_in\">tie</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x1, x2, y1, y2;</span><br><span class=\"line\">        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class=\"line\">        R[i * <span class=\"number\">2</span> - <span class=\"number\">1</span>] = (Rectangle)&#123;x1, y1, y2, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">        R[i * <span class=\"number\">2</span>] = (Rectangle)&#123;x2, y1, y2, <span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\">        Y[i * <span class=\"number\">2</span> - <span class=\"number\">1</span>] = y1;</span><br><span class=\"line\">        Y[i * <span class=\"number\">2</span>] = y2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(R + <span class=\"number\">1</span>, R + <span class=\"number\">2</span> * n + <span class=\"number\">1</span>, cmp);</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(Y + <span class=\"number\">1</span>, Y + <span class=\"number\">2</span> * n + <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"type\">int</span> ans = <span class=\"number\">0</span>, NoY = <span class=\"built_in\">unique</span>(Y + <span class=\"number\">1</span>, Y + <span class=\"number\">2</span> * n + <span class=\"number\">1</span>) - Y - <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">2</span> * n <span class=\"comment\">/*最后一边 k 是 -1 不需要统计*/</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 所有 x 相等的情况只会记入最后一次，即如果 R[i].x == R[i + 1].x 则 R[i + 1].x - R[i].x == 0.</span></span><br><span class=\"line\">        <span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, NoY - <span class=\"number\">1</span>, R[i].y1, R[i].y2, R[i].k);</span><br><span class=\"line\">        ans = ans + (T[<span class=\"number\">1</span>].len * (R[i + <span class=\"number\">1</span>].x - R[i].x));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; ans &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Push_Up</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (T[root].cnt &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        T[root].len = Y[r + <span class=\"number\">1</span>] - Y[l];</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        T[root].len = T[ls].len + T[rs].len;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// Y 是离散数组，在 Y 内，每个出现的 Y 值都有出现且递增排序。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Change</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R, <span class=\"type\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Y[r + <span class=\"number\">1</span>] &lt;= L || R &lt;= Y[l]) <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (L &lt;= Y[l] &amp;&amp; Y[r + <span class=\"number\">1</span>] &lt;= R) &#123;</span><br><span class=\"line\">        T[root].cnt += val;</span><br><span class=\"line\">        <span class=\"built_in\">Push_Up</span>(root, l, r);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"built_in\">Change</span>(ls, l, mid, L, R, val);</span><br><span class=\"line\">    <span class=\"built_in\">Change</span>(rs, mid + <span class=\"number\">1</span>, r, L, R, val);</span><br><span class=\"line\">    <span class=\"built_in\">Push_Up</span>(root, l, r);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Queue</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// lol</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0ll</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"树链剖分学习笔记","date":"2023-01-13T13:52:22.000Z","photos":["/img/树链剖分学习笔记.jpg"],"cover":["/img/树链剖分学习笔记.jpg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about OI..."},"toc":true,"_content":"## 树链剖分\n\n树链剖分（树剖/链剖）有多种形式，如 重链剖分，长链剖分 和用于 Link/cut Tree 的剖分（有时被称作“实链剖分”），大多数情况下（没有特别说明时），“树链剖分”都指“重链剖分”。\n引自：[OI-WIKI](https://oi-wiki.org/graph/hld/#%E5%AD%90%E6%A0%91%E7%BB%B4%E6%8A%A4)\n\n### 重链剖分\n#### 我们给出一些定义\n\n- 定义 重子节点 表示其子节点中子树最大的子结点。如果有多个子树最大的子结点，取其一。如果没有子节点，就无重子节点。\n\n- 定义 轻子节点 表示剩余的所有子结点。\n\n- 从这个结点到重子节点的边为 重边。\n\n- 到其他轻子节点的边为 轻边。\n\n- 若干条首尾衔接的重边构成 重链。\n\n![](https://oi-wiki.org/graph/images/hld.png)\n\n简单来说，我们要做的就是把一颗树剖分成一条条链（如图左到图右）\n\n具体点：我们把落单的结点也当作重链，那么我们要将整棵树就被剖分成若干条重链。\n\n#### 实现\n\n分两个 DFS，所需变量：\n\nfa[] : fa[i] 表示第 i 个节点的父亲节点；\nHson[] : Hson[i] 表示第 i 个节点的重儿子节点；\nDep[] : Dep[i] 表示第 i 个节点的深度（根节点深度为 1）；\nSize[] : Size[i] 表示第 i 个节点的子树大小；\nTop[] : Top[i] 表示第 i 个节点所在的链的顶部节点；\nseg[] : seg[i] 表示第 i 个节点的 DFS 序；\nrev[] : 表示 DFS 序所对应的节点编号。\n\nCODE：\n\n```cpp\nvoid Podfs1(int p, int f) {\n\tfa[p] = f;\n\tDep[p] = Dep[f] + 1;\n\tSize[p] = 1;\n\tfor (int i = head[p]; i; i = node[i].next) {\n\t\tint v = node[i].y;\n\t\tif (v == f) continue;\n\t\tPodfs1(v, p);\n\t\tSize[p] += Size[v];\n\t\tif (Size[v] > Size[Hson[p]]) Hson[p] = v;\n\t}\n}\n```\n\n```cpp\nvoid Podfs2(int p, int top) {\n\t++DFNtot;\n\tTop[p] = top;\n\tseg[p] = DFNtot;\n\trev[DFNtot] = p;\n\tif (Hson[p])\n\t\tPodfs2(Hson[p], top);\n\tfor (int i = head[p]; i; i = node[i].next) {\n\t\tint v = node[i].y;\n\t\tif (v == fa[p]) continue;\n\t\tif (Hson[p] != v) Podfs2(v, v);\n\t}\n}\n```\n\n配合线段树与实现 LCA：\n\n[P3384 【模板】重链剖分/树链剖分](https://www.luogu.com.cn/problem/P3384)\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int _ = 1e5 + 7;\n\nint N, M, P, R, val[_];\nint fa[_], Hson[_], Dep[_], Size[_], Top[_], seg[_], rev[_], DFNtot = 0;\n\nint head[_], Tot = 0;\nstruct Node {\n\tint y, next;\n\tNode() {next = 0;}\n} node[2 * _];\n\nvoid add(int x, int y) {\n\t++Tot;\n\tnode[Tot].y = y;\n\tnode[Tot].next = head[x];\n\thead[x] = Tot;\n}\n\n/*--树剖dfs--*/\nvoid Podfs1(int p, int f) {\n\tfa[p] = f;\n\tDep[p] = Dep[f] + 1;\n\tSize[p] = 1;\n\tfor (int i = head[p]; i; i = node[i].next) {\n\t\tint v = node[i].y;\n\t\tif (v == f) continue;\n\t\tPodfs1(v, p);\n\t\tSize[p] += Size[v];\n\t\tif (Size[v] > Size[Hson[p]]) Hson[p] = v;\n\t}\n}\nvoid Podfs2(int p, int top) {\n\t++DFNtot;\n\tTop[p] = top;\n\tseg[p] = DFNtot;\n\trev[DFNtot] = p;\n\tif (Hson[p])\n\t\tPodfs2(Hson[p], top);\n\tfor (int i = head[p]; i; i = node[i].next) {\n\t\tint v = node[i].y;\n\t\tif (v == fa[p]) continue;\n\t\tif (Hson[p] != v) Podfs2(v, v);\n\t}\n}\n/*--线段树--*/\nstruct Tree {\n\tint l, r, sum;\n\tint lazy;\n} tree[4 * _];\n\nint lson(int root) {return root << 1;}\nint rson(int root) {return root << 1 | 1;}\n\nvoid Push_Up(int root) {\n\ttree[root].sum = (tree[lson(root)].sum + tree[rson(root)].sum) % P;\n}\n\nvoid Push_Down(int root) {\n\tif (tree[root].lazy != 0) {\n\t\tint num = tree[root].lazy;\n\t\ttree[lson(root)].sum = (tree[lson(root)].sum + (tree[lson(root)].r - tree[lson(root)].l + 1) * num % P) % P;\n\t\ttree[rson(root)].sum = (tree[rson(root)].sum + (tree[rson(root)].r - tree[rson(root)].l + 1) * num % P) % P;\n\t\ttree[lson(root)].lazy = (tree[lson(root)].lazy + num) % P;\n\t\ttree[rson(root)].lazy = (tree[rson(root)].lazy + num) % P;\n\t\ttree[root].lazy = 0;\n\t}\n}\n\nvoid Build(int l, int r, int root) {\n\ttree[root].l = l;\n\ttree[root].r = r;\n\tif (l == r) {\n\t\ttree[root].sum = val[rev[l]] % P;\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tBuild(l, mid, lson(root));\n\tBuild(mid + 1, r, rson(root));\n\tPush_Up(root);\n}\n\nvoid Change(int root, int l, int r, int L, int R, int num) {\n\tif (L <= l && r <= R) {\n\t\ttree[root].sum += (r - l + 1) * num % P;\n\t\ttree[root].sum %= P;\n\t\ttree[root].lazy += num % P;\n\t\ttree[root].lazy %= P;\n\t\treturn ;\n\t}\n\tPush_Down(root);\n\tint mid = l + r >> 1;\n\tif (L <= mid) \n\t\tChange(lson(root), l, mid, L, R, num);\n\tif (mid < R)\n\t\tChange(rson(root), mid + 1, r, L, R, num);\n\tPush_Up(root);\n\treturn ;\n}\n\nint Query(int root, int l, int r, int L, int R) {\n\tif (L > r || R < l) return 0;\n\tif (L <= l && r <= R) \n\t\treturn tree[root].sum % P;\n\tint ans = 0;\n\tPush_Down(root);\n\tint mid = l + r >> 1;\n\tif (L <= mid) {\n\t\tans += Query(lson(root), l, mid, L, R) % P;\n\t\tans %= P;\n\t}\n\tif (mid < R) {\n\t\tans += Query(rson(root), mid + 1, r, L, R) % P;\n\t\tans %= P;\n\t}\n\treturn ans % P;\n}\n\n/*--LCA--*/\nvoid TChange(int u, int v, int num) {\n\twhile (Top[u] != Top[v]) {\n\t\tif (Dep[Top[u]] > Dep[Top[v]]) {\n\t\t\tChange(1, 1, DFNtot, seg[Top[u]], seg[u], num);\n\t\t\tu = fa[Top[u]];\n\t\t} else {\n\t\t\tChange(1, 1, DFNtot, seg[Top[v]], seg[v], num);\n\t\t\tv = fa[Top[v]];\n\t\t}\n\t}\n\tif (Dep[u] > Dep[v]) swap(u, v);\n\tChange(1, 1, DFNtot, seg[u], seg[v], num);\n}\nint TQuery(int u, int v) {\n\tint ans = 0;\n\twhile (Top[u] != Top[v]) {\n\t\tif (Dep[Top[u]] > Dep[Top[v]]) {\n\t\t\tans = ans + Query(1, 1, DFNtot, seg[Top[u]], seg[u]) % P;\n\t\t\tans %= P;\n\t\t\tu = fa[Top[u]];\n\t\t} else {\n\t\t\tans = ans + Query(1, 1, DFNtot, seg[Top[v]], seg[v]) % P;\n\t\t\tans %= P;\n\t\t\tv = fa[Top[v]];\n\t\t}\n\t}\n\tif (Dep[u] > Dep[v]) swap(u, v);\n\tans = (ans + Query(1, 1, DFNtot, seg[u], seg[v]) % P) % P;\n\treturn ans;\n}\nsigned main() {\n\tcin >> N >> M >> R >> P;\n\tfor (int i = 1; i <= N; i++) cin >> val[i];\n\tfor (int i = 1; i < N; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tadd(x, y);\n\t\tadd(y, x);\n\t}\n\t\n\tPodfs1(R, 0);\n\tPodfs2(R, R);\n\t\n\tBuild(1, DFNtot, 1);\n\t\n\twhile (M--) {\n\t\tint k;\n\t\tcin >> k;\n\t\tif (k == 1) {\n\t\t\tint x, y, z;\n\t\t\tcin >> x >> y >> z;\n\t\t\tTChange(x, y, z);\n\t\t} else if (k == 2) {\n\t\t\tint x, y;\n\t\t\tcin >> x >> y;\n\t\t\tcout << TQuery(x, y) << '\\n';\n\t\t} else if (k == 3) {\n\t\t\tint x, z;\n\t\t\tcin >> x >> z;\n\t\t\tChange(1, 1, DFNtot, seg[x], seg[x] + Size[x] - 1, z);\n\t\t} else if (k == 4) {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\tcout << Query(1, 1, DFNtot, seg[x], seg[x] + Size[x] - 1) << '\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```","source":"_posts/树链剖分学习笔记.md","raw":"---\ntitle: 树链剖分学习笔记\ndate: 2023-01-13 21:52:22\ntags: 学习笔记\ncategories: 学习笔记\nphotos: /img/树链剖分学习笔记.jpg\ncover: [/img/树链剖分学习笔记.jpg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about OI...\ntoc: true\n---\n## 树链剖分\n\n树链剖分（树剖/链剖）有多种形式，如 重链剖分，长链剖分 和用于 Link/cut Tree 的剖分（有时被称作“实链剖分”），大多数情况下（没有特别说明时），“树链剖分”都指“重链剖分”。\n引自：[OI-WIKI](https://oi-wiki.org/graph/hld/#%E5%AD%90%E6%A0%91%E7%BB%B4%E6%8A%A4)\n\n### 重链剖分\n#### 我们给出一些定义\n\n- 定义 重子节点 表示其子节点中子树最大的子结点。如果有多个子树最大的子结点，取其一。如果没有子节点，就无重子节点。\n\n- 定义 轻子节点 表示剩余的所有子结点。\n\n- 从这个结点到重子节点的边为 重边。\n\n- 到其他轻子节点的边为 轻边。\n\n- 若干条首尾衔接的重边构成 重链。\n\n![](https://oi-wiki.org/graph/images/hld.png)\n\n简单来说，我们要做的就是把一颗树剖分成一条条链（如图左到图右）\n\n具体点：我们把落单的结点也当作重链，那么我们要将整棵树就被剖分成若干条重链。\n\n#### 实现\n\n分两个 DFS，所需变量：\n\nfa[] : fa[i] 表示第 i 个节点的父亲节点；\nHson[] : Hson[i] 表示第 i 个节点的重儿子节点；\nDep[] : Dep[i] 表示第 i 个节点的深度（根节点深度为 1）；\nSize[] : Size[i] 表示第 i 个节点的子树大小；\nTop[] : Top[i] 表示第 i 个节点所在的链的顶部节点；\nseg[] : seg[i] 表示第 i 个节点的 DFS 序；\nrev[] : 表示 DFS 序所对应的节点编号。\n\nCODE：\n\n```cpp\nvoid Podfs1(int p, int f) {\n\tfa[p] = f;\n\tDep[p] = Dep[f] + 1;\n\tSize[p] = 1;\n\tfor (int i = head[p]; i; i = node[i].next) {\n\t\tint v = node[i].y;\n\t\tif (v == f) continue;\n\t\tPodfs1(v, p);\n\t\tSize[p] += Size[v];\n\t\tif (Size[v] > Size[Hson[p]]) Hson[p] = v;\n\t}\n}\n```\n\n```cpp\nvoid Podfs2(int p, int top) {\n\t++DFNtot;\n\tTop[p] = top;\n\tseg[p] = DFNtot;\n\trev[DFNtot] = p;\n\tif (Hson[p])\n\t\tPodfs2(Hson[p], top);\n\tfor (int i = head[p]; i; i = node[i].next) {\n\t\tint v = node[i].y;\n\t\tif (v == fa[p]) continue;\n\t\tif (Hson[p] != v) Podfs2(v, v);\n\t}\n}\n```\n\n配合线段树与实现 LCA：\n\n[P3384 【模板】重链剖分/树链剖分](https://www.luogu.com.cn/problem/P3384)\n\n```cpp\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int _ = 1e5 + 7;\n\nint N, M, P, R, val[_];\nint fa[_], Hson[_], Dep[_], Size[_], Top[_], seg[_], rev[_], DFNtot = 0;\n\nint head[_], Tot = 0;\nstruct Node {\n\tint y, next;\n\tNode() {next = 0;}\n} node[2 * _];\n\nvoid add(int x, int y) {\n\t++Tot;\n\tnode[Tot].y = y;\n\tnode[Tot].next = head[x];\n\thead[x] = Tot;\n}\n\n/*--树剖dfs--*/\nvoid Podfs1(int p, int f) {\n\tfa[p] = f;\n\tDep[p] = Dep[f] + 1;\n\tSize[p] = 1;\n\tfor (int i = head[p]; i; i = node[i].next) {\n\t\tint v = node[i].y;\n\t\tif (v == f) continue;\n\t\tPodfs1(v, p);\n\t\tSize[p] += Size[v];\n\t\tif (Size[v] > Size[Hson[p]]) Hson[p] = v;\n\t}\n}\nvoid Podfs2(int p, int top) {\n\t++DFNtot;\n\tTop[p] = top;\n\tseg[p] = DFNtot;\n\trev[DFNtot] = p;\n\tif (Hson[p])\n\t\tPodfs2(Hson[p], top);\n\tfor (int i = head[p]; i; i = node[i].next) {\n\t\tint v = node[i].y;\n\t\tif (v == fa[p]) continue;\n\t\tif (Hson[p] != v) Podfs2(v, v);\n\t}\n}\n/*--线段树--*/\nstruct Tree {\n\tint l, r, sum;\n\tint lazy;\n} tree[4 * _];\n\nint lson(int root) {return root << 1;}\nint rson(int root) {return root << 1 | 1;}\n\nvoid Push_Up(int root) {\n\ttree[root].sum = (tree[lson(root)].sum + tree[rson(root)].sum) % P;\n}\n\nvoid Push_Down(int root) {\n\tif (tree[root].lazy != 0) {\n\t\tint num = tree[root].lazy;\n\t\ttree[lson(root)].sum = (tree[lson(root)].sum + (tree[lson(root)].r - tree[lson(root)].l + 1) * num % P) % P;\n\t\ttree[rson(root)].sum = (tree[rson(root)].sum + (tree[rson(root)].r - tree[rson(root)].l + 1) * num % P) % P;\n\t\ttree[lson(root)].lazy = (tree[lson(root)].lazy + num) % P;\n\t\ttree[rson(root)].lazy = (tree[rson(root)].lazy + num) % P;\n\t\ttree[root].lazy = 0;\n\t}\n}\n\nvoid Build(int l, int r, int root) {\n\ttree[root].l = l;\n\ttree[root].r = r;\n\tif (l == r) {\n\t\ttree[root].sum = val[rev[l]] % P;\n\t\treturn ;\n\t}\n\tint mid = l + r >> 1;\n\tBuild(l, mid, lson(root));\n\tBuild(mid + 1, r, rson(root));\n\tPush_Up(root);\n}\n\nvoid Change(int root, int l, int r, int L, int R, int num) {\n\tif (L <= l && r <= R) {\n\t\ttree[root].sum += (r - l + 1) * num % P;\n\t\ttree[root].sum %= P;\n\t\ttree[root].lazy += num % P;\n\t\ttree[root].lazy %= P;\n\t\treturn ;\n\t}\n\tPush_Down(root);\n\tint mid = l + r >> 1;\n\tif (L <= mid) \n\t\tChange(lson(root), l, mid, L, R, num);\n\tif (mid < R)\n\t\tChange(rson(root), mid + 1, r, L, R, num);\n\tPush_Up(root);\n\treturn ;\n}\n\nint Query(int root, int l, int r, int L, int R) {\n\tif (L > r || R < l) return 0;\n\tif (L <= l && r <= R) \n\t\treturn tree[root].sum % P;\n\tint ans = 0;\n\tPush_Down(root);\n\tint mid = l + r >> 1;\n\tif (L <= mid) {\n\t\tans += Query(lson(root), l, mid, L, R) % P;\n\t\tans %= P;\n\t}\n\tif (mid < R) {\n\t\tans += Query(rson(root), mid + 1, r, L, R) % P;\n\t\tans %= P;\n\t}\n\treturn ans % P;\n}\n\n/*--LCA--*/\nvoid TChange(int u, int v, int num) {\n\twhile (Top[u] != Top[v]) {\n\t\tif (Dep[Top[u]] > Dep[Top[v]]) {\n\t\t\tChange(1, 1, DFNtot, seg[Top[u]], seg[u], num);\n\t\t\tu = fa[Top[u]];\n\t\t} else {\n\t\t\tChange(1, 1, DFNtot, seg[Top[v]], seg[v], num);\n\t\t\tv = fa[Top[v]];\n\t\t}\n\t}\n\tif (Dep[u] > Dep[v]) swap(u, v);\n\tChange(1, 1, DFNtot, seg[u], seg[v], num);\n}\nint TQuery(int u, int v) {\n\tint ans = 0;\n\twhile (Top[u] != Top[v]) {\n\t\tif (Dep[Top[u]] > Dep[Top[v]]) {\n\t\t\tans = ans + Query(1, 1, DFNtot, seg[Top[u]], seg[u]) % P;\n\t\t\tans %= P;\n\t\t\tu = fa[Top[u]];\n\t\t} else {\n\t\t\tans = ans + Query(1, 1, DFNtot, seg[Top[v]], seg[v]) % P;\n\t\t\tans %= P;\n\t\t\tv = fa[Top[v]];\n\t\t}\n\t}\n\tif (Dep[u] > Dep[v]) swap(u, v);\n\tans = (ans + Query(1, 1, DFNtot, seg[u], seg[v]) % P) % P;\n\treturn ans;\n}\nsigned main() {\n\tcin >> N >> M >> R >> P;\n\tfor (int i = 1; i <= N; i++) cin >> val[i];\n\tfor (int i = 1; i < N; i++) {\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tadd(x, y);\n\t\tadd(y, x);\n\t}\n\t\n\tPodfs1(R, 0);\n\tPodfs2(R, R);\n\t\n\tBuild(1, DFNtot, 1);\n\t\n\twhile (M--) {\n\t\tint k;\n\t\tcin >> k;\n\t\tif (k == 1) {\n\t\t\tint x, y, z;\n\t\t\tcin >> x >> y >> z;\n\t\t\tTChange(x, y, z);\n\t\t} else if (k == 2) {\n\t\t\tint x, y;\n\t\t\tcin >> x >> y;\n\t\t\tcout << TQuery(x, y) << '\\n';\n\t\t} else if (k == 3) {\n\t\t\tint x, z;\n\t\t\tcin >> x >> z;\n\t\t\tChange(1, 1, DFNtot, seg[x], seg[x] + Size[x] - 1, z);\n\t\t} else if (k == 4) {\n\t\t\tint x;\n\t\t\tcin >> x;\n\t\t\tcout << Query(1, 1, DFNtot, seg[x], seg[x] + Size[x] - 1) << '\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n```","slug":"树链剖分学习笔记","published":1,"updated":"2024-07-12T09:36:44.771Z","comments":1,"layout":"post","link":"","_id":"clz0heoo2000s4mu881b673ym","content":"<h2 id=\"树链剖分\"><a href=\"#树链剖分\" class=\"headerlink\" title=\"树链剖分\"></a>树链剖分</h2><p>树链剖分（树剖&#x2F;链剖）有多种形式，如 重链剖分，长链剖分 和用于 Link&#x2F;cut Tree 的剖分（有时被称作“实链剖分”），大多数情况下（没有特别说明时），“树链剖分”都指“重链剖分”。<br>引自：<a href=\"https://oi-wiki.org/graph/hld/#%E5%AD%90%E6%A0%91%E7%BB%B4%E6%8A%A4\">OI-WIKI</a></p>\n<h3 id=\"重链剖分\"><a href=\"#重链剖分\" class=\"headerlink\" title=\"重链剖分\"></a>重链剖分</h3><h4 id=\"我们给出一些定义\"><a href=\"#我们给出一些定义\" class=\"headerlink\" title=\"我们给出一些定义\"></a>我们给出一些定义</h4><ul>\n<li><p>定义 重子节点 表示其子节点中子树最大的子结点。如果有多个子树最大的子结点，取其一。如果没有子节点，就无重子节点。</p>\n</li>\n<li><p>定义 轻子节点 表示剩余的所有子结点。</p>\n</li>\n<li><p>从这个结点到重子节点的边为 重边。</p>\n</li>\n<li><p>到其他轻子节点的边为 轻边。</p>\n</li>\n<li><p>若干条首尾衔接的重边构成 重链。</p>\n</li>\n</ul>\n<p><img src=\"https://oi-wiki.org/graph/images/hld.png\"  data-tag='post-image' loading=\"lazy\" onerror='this.onerror=null;this.src=\"/img/404.jpg\"'></p>\n<p>简单来说，我们要做的就是把一颗树剖分成一条条链（如图左到图右）</p>\n<p>具体点：我们把落单的结点也当作重链，那么我们要将整棵树就被剖分成若干条重链。</p>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p>分两个 DFS，所需变量：</p>\n<p>fa[] : fa[i] 表示第 i 个节点的父亲节点；<br>Hson[] : Hson[i] 表示第 i 个节点的重儿子节点；<br>Dep[] : Dep[i] 表示第 i 个节点的深度（根节点深度为 1）；<br>Size[] : Size[i] 表示第 i 个节点的子树大小；<br>Top[] : Top[i] 表示第 i 个节点所在的链的顶部节点；<br>seg[] : seg[i] 表示第 i 个节点的 DFS 序；<br>rev[] : 表示 DFS 序所对应的节点编号。</p>\n<p>CODE：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Podfs1</span><span class=\"params\">(<span class=\"type\">int</span> p, <span class=\"type\">int</span> f)</span> </span>&#123;</span><br><span class=\"line\">\tfa[p] = f;</span><br><span class=\"line\">\tDep[p] = Dep[f] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\tSize[p] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> v = node[i].y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == f) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">Podfs1</span>(v, p);</span><br><span class=\"line\">\t\tSize[p] += Size[v];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Size[v] &gt; Size[Hson[p]]) Hson[p] = v;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Podfs2</span><span class=\"params\">(<span class=\"type\">int</span> p, <span class=\"type\">int</span> top)</span> </span>&#123;</span><br><span class=\"line\">\t++DFNtot;</span><br><span class=\"line\">\tTop[p] = top;</span><br><span class=\"line\">\tseg[p] = DFNtot;</span><br><span class=\"line\">\trev[DFNtot] = p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Hson[p])</span><br><span class=\"line\">\t\t<span class=\"built_in\">Podfs2</span>(Hson[p], top);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> v = node[i].y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == fa[p]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Hson[p] != v) <span class=\"built_in\">Podfs2</span>(v, v);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配合线段树与实现 LCA：</p>\n<p><a href=\"https://www.luogu.com.cn/problem/P3384\">P3384 【模板】重链剖分&#x2F;树链剖分</a></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> _ = <span class=\"number\">1e5</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> N, M, P, R, val[_];</span><br><span class=\"line\"><span class=\"type\">int</span> fa[_], Hson[_], Dep[_], Size[_], Top[_], seg[_], rev[_], DFNtot = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> head[_], Tot = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> y, next;</span><br><span class=\"line\">\t<span class=\"built_in\">Node</span>() &#123;next = <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">&#125; node[<span class=\"number\">2</span> * _];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t++Tot;</span><br><span class=\"line\">\tnode[Tot].y = y;</span><br><span class=\"line\">\tnode[Tot].next = head[x];</span><br><span class=\"line\">\thead[x] = Tot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*--树剖dfs--*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Podfs1</span><span class=\"params\">(<span class=\"type\">int</span> p, <span class=\"type\">int</span> f)</span> </span>&#123;</span><br><span class=\"line\">\tfa[p] = f;</span><br><span class=\"line\">\tDep[p] = Dep[f] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\tSize[p] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> v = node[i].y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == f) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">Podfs1</span>(v, p);</span><br><span class=\"line\">\t\tSize[p] += Size[v];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Size[v] &gt; Size[Hson[p]]) Hson[p] = v;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Podfs2</span><span class=\"params\">(<span class=\"type\">int</span> p, <span class=\"type\">int</span> top)</span> </span>&#123;</span><br><span class=\"line\">\t++DFNtot;</span><br><span class=\"line\">\tTop[p] = top;</span><br><span class=\"line\">\tseg[p] = DFNtot;</span><br><span class=\"line\">\trev[DFNtot] = p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Hson[p])</span><br><span class=\"line\">\t\t<span class=\"built_in\">Podfs2</span>(Hson[p], top);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> v = node[i].y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == fa[p]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Hson[p] != v) <span class=\"built_in\">Podfs2</span>(v, v);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*--线段树--*/</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Tree</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> l, r, sum;</span><br><span class=\"line\">\t<span class=\"type\">int</span> lazy;</span><br><span class=\"line\">&#125; tree[<span class=\"number\">4</span> * _];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">lson</span><span class=\"params\">(<span class=\"type\">int</span> root)</span> </span>&#123;<span class=\"keyword\">return</span> root &lt;&lt; <span class=\"number\">1</span>;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">rson</span><span class=\"params\">(<span class=\"type\">int</span> root)</span> </span>&#123;<span class=\"keyword\">return</span> root &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Push_Up</span><span class=\"params\">(<span class=\"type\">int</span> root)</span> </span>&#123;</span><br><span class=\"line\">\ttree[root].sum = (tree[<span class=\"built_in\">lson</span>(root)].sum + tree[<span class=\"built_in\">rson</span>(root)].sum) % P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Push_Down</span><span class=\"params\">(<span class=\"type\">int</span> root)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[root].lazy != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> num = tree[root].lazy;</span><br><span class=\"line\">\t\ttree[<span class=\"built_in\">lson</span>(root)].sum = (tree[<span class=\"built_in\">lson</span>(root)].sum + (tree[<span class=\"built_in\">lson</span>(root)].r - tree[<span class=\"built_in\">lson</span>(root)].l + <span class=\"number\">1</span>) * num % P) % P;</span><br><span class=\"line\">\t\ttree[<span class=\"built_in\">rson</span>(root)].sum = (tree[<span class=\"built_in\">rson</span>(root)].sum + (tree[<span class=\"built_in\">rson</span>(root)].r - tree[<span class=\"built_in\">rson</span>(root)].l + <span class=\"number\">1</span>) * num % P) % P;</span><br><span class=\"line\">\t\ttree[<span class=\"built_in\">lson</span>(root)].lazy = (tree[<span class=\"built_in\">lson</span>(root)].lazy + num) % P;</span><br><span class=\"line\">\t\ttree[<span class=\"built_in\">rson</span>(root)].lazy = (tree[<span class=\"built_in\">rson</span>(root)].lazy + num) % P;</span><br><span class=\"line\">\t\ttree[root].lazy = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Build</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> root)</span> </span>&#123;</span><br><span class=\"line\">\ttree[root].l = l;</span><br><span class=\"line\">\ttree[root].r = r;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (l == r) &#123;</span><br><span class=\"line\">\t\ttree[root].sum = val[rev[l]] % P;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">Build</span>(l, mid, <span class=\"built_in\">lson</span>(root));</span><br><span class=\"line\">\t<span class=\"built_in\">Build</span>(mid + <span class=\"number\">1</span>, r, <span class=\"built_in\">rson</span>(root));</span><br><span class=\"line\">\t<span class=\"built_in\">Push_Up</span>(root);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Change</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R, <span class=\"type\">int</span> num)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &lt;= l &amp;&amp; r &lt;= R) &#123;</span><br><span class=\"line\">\t\ttree[root].sum += (r - l + <span class=\"number\">1</span>) * num % P;</span><br><span class=\"line\">\t\ttree[root].sum %= P;</span><br><span class=\"line\">\t\ttree[root].lazy += num % P;</span><br><span class=\"line\">\t\ttree[root].lazy %= P;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">Push_Down</span>(root);</span><br><span class=\"line\">\t<span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &lt;= mid) </span><br><span class=\"line\">\t\t<span class=\"built_in\">Change</span>(<span class=\"built_in\">lson</span>(root), l, mid, L, R, num);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (mid &lt; R)</span><br><span class=\"line\">\t\t<span class=\"built_in\">Change</span>(<span class=\"built_in\">rson</span>(root), mid + <span class=\"number\">1</span>, r, L, R, num);</span><br><span class=\"line\">\t<span class=\"built_in\">Push_Up</span>(root);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Query</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &gt; r || R &lt; l) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &lt;= l &amp;&amp; r &lt;= R) </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> tree[root].sum % P;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">Push_Down</span>(root);</span><br><span class=\"line\">\t<span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &lt;= mid) &#123;</span><br><span class=\"line\">\t\tans += <span class=\"built_in\">Query</span>(<span class=\"built_in\">lson</span>(root), l, mid, L, R) % P;</span><br><span class=\"line\">\t\tans %= P;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (mid &lt; R) &#123;</span><br><span class=\"line\">\t\tans += <span class=\"built_in\">Query</span>(<span class=\"built_in\">rson</span>(root), mid + <span class=\"number\">1</span>, r, L, R) % P;</span><br><span class=\"line\">\t\tans %= P;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans % P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*--LCA--*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">TChange</span><span class=\"params\">(<span class=\"type\">int</span> u, <span class=\"type\">int</span> v, <span class=\"type\">int</span> num)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (Top[u] != Top[v]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Dep[Top[u]] &gt; Dep[Top[v]]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[Top[u]], seg[u], num);</span><br><span class=\"line\">\t\t\tu = fa[Top[u]];</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[Top[v]], seg[v], num);</span><br><span class=\"line\">\t\t\tv = fa[Top[v]];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Dep[u] &gt; Dep[v]) <span class=\"built_in\">swap</span>(u, v);</span><br><span class=\"line\">\t<span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[u], seg[v], num);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">TQuery</span><span class=\"params\">(<span class=\"type\">int</span> u, <span class=\"type\">int</span> v)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (Top[u] != Top[v]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Dep[Top[u]] &gt; Dep[Top[v]]) &#123;</span><br><span class=\"line\">\t\t\tans = ans + <span class=\"built_in\">Query</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[Top[u]], seg[u]) % P;</span><br><span class=\"line\">\t\t\tans %= P;</span><br><span class=\"line\">\t\t\tu = fa[Top[u]];</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tans = ans + <span class=\"built_in\">Query</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[Top[v]], seg[v]) % P;</span><br><span class=\"line\">\t\t\tans %= P;</span><br><span class=\"line\">\t\t\tv = fa[Top[v]];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Dep[u] &gt; Dep[v]) <span class=\"built_in\">swap</span>(u, v);</span><br><span class=\"line\">\tans = (ans + <span class=\"built_in\">Query</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[u], seg[v]) % P) % P;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; N &gt;&gt; M &gt;&gt; R &gt;&gt; P;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) cin &gt;&gt; val[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t<span class=\"built_in\">add</span>(x, y);</span><br><span class=\"line\">\t\t<span class=\"built_in\">add</span>(y, x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">Podfs1</span>(R, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">Podfs2</span>(R, R);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">Build</span>(<span class=\"number\">1</span>, DFNtot, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (M--) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> k;</span><br><span class=\"line\">\t\tcin &gt;&gt; k;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (k == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x, y, z;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">TChange</span>(x, y, z);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">TQuery</span>(x, y) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x, z;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x &gt;&gt; z;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[x], seg[x] + Size[x] - <span class=\"number\">1</span>, z);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">Query</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[x], seg[x] + Size[x] - <span class=\"number\">1</span>) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"树链剖分\"><a href=\"#树链剖分\" class=\"headerlink\" title=\"树链剖分\"></a>树链剖分</h2><p>树链剖分（树剖&#x2F;链剖）有多种形式，如 重链剖分，长链剖分 和用于 Link&#x2F;cut Tree 的剖分（有时被称作“实链剖分”），大多数情况下（没有特别说明时），“树链剖分”都指“重链剖分”。<br>引自：<a href=\"https://oi-wiki.org/graph/hld/#%E5%AD%90%E6%A0%91%E7%BB%B4%E6%8A%A4\">OI-WIKI</a></p>\n<h3 id=\"重链剖分\"><a href=\"#重链剖分\" class=\"headerlink\" title=\"重链剖分\"></a>重链剖分</h3><h4 id=\"我们给出一些定义\"><a href=\"#我们给出一些定义\" class=\"headerlink\" title=\"我们给出一些定义\"></a>我们给出一些定义</h4><ul>\n<li><p>定义 重子节点 表示其子节点中子树最大的子结点。如果有多个子树最大的子结点，取其一。如果没有子节点，就无重子节点。</p>\n</li>\n<li><p>定义 轻子节点 表示剩余的所有子结点。</p>\n</li>\n<li><p>从这个结点到重子节点的边为 重边。</p>\n</li>\n<li><p>到其他轻子节点的边为 轻边。</p>\n</li>\n<li><p>若干条首尾衔接的重边构成 重链。</p>\n</li>\n</ul>\n<p><img src=\"https://oi-wiki.org/graph/images/hld.png\"></p>\n<p>简单来说，我们要做的就是把一颗树剖分成一条条链（如图左到图右）</p>\n<p>具体点：我们把落单的结点也当作重链，那么我们要将整棵树就被剖分成若干条重链。</p>\n<h4 id=\"实现\"><a href=\"#实现\" class=\"headerlink\" title=\"实现\"></a>实现</h4><p>分两个 DFS，所需变量：</p>\n<p>fa[] : fa[i] 表示第 i 个节点的父亲节点；<br>Hson[] : Hson[i] 表示第 i 个节点的重儿子节点；<br>Dep[] : Dep[i] 表示第 i 个节点的深度（根节点深度为 1）；<br>Size[] : Size[i] 表示第 i 个节点的子树大小；<br>Top[] : Top[i] 表示第 i 个节点所在的链的顶部节点；<br>seg[] : seg[i] 表示第 i 个节点的 DFS 序；<br>rev[] : 表示 DFS 序所对应的节点编号。</p>\n<p>CODE：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Podfs1</span><span class=\"params\">(<span class=\"type\">int</span> p, <span class=\"type\">int</span> f)</span> </span>&#123;</span><br><span class=\"line\">\tfa[p] = f;</span><br><span class=\"line\">\tDep[p] = Dep[f] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\tSize[p] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> v = node[i].y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == f) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">Podfs1</span>(v, p);</span><br><span class=\"line\">\t\tSize[p] += Size[v];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Size[v] &gt; Size[Hson[p]]) Hson[p] = v;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Podfs2</span><span class=\"params\">(<span class=\"type\">int</span> p, <span class=\"type\">int</span> top)</span> </span>&#123;</span><br><span class=\"line\">\t++DFNtot;</span><br><span class=\"line\">\tTop[p] = top;</span><br><span class=\"line\">\tseg[p] = DFNtot;</span><br><span class=\"line\">\trev[DFNtot] = p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Hson[p])</span><br><span class=\"line\">\t\t<span class=\"built_in\">Podfs2</span>(Hson[p], top);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> v = node[i].y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == fa[p]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Hson[p] != v) <span class=\"built_in\">Podfs2</span>(v, v);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配合线段树与实现 LCA：</p>\n<p><a href=\"https://www.luogu.com.cn/problem/P3384\">P3384 【模板】重链剖分&#x2F;树链剖分</a></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> int long long</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> _ = <span class=\"number\">1e5</span> + <span class=\"number\">7</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> N, M, P, R, val[_];</span><br><span class=\"line\"><span class=\"type\">int</span> fa[_], Hson[_], Dep[_], Size[_], Top[_], seg[_], rev[_], DFNtot = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> head[_], Tot = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> y, next;</span><br><span class=\"line\">\t<span class=\"built_in\">Node</span>() &#123;next = <span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">&#125; node[<span class=\"number\">2</span> * _];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">\t++Tot;</span><br><span class=\"line\">\tnode[Tot].y = y;</span><br><span class=\"line\">\tnode[Tot].next = head[x];</span><br><span class=\"line\">\thead[x] = Tot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*--树剖dfs--*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Podfs1</span><span class=\"params\">(<span class=\"type\">int</span> p, <span class=\"type\">int</span> f)</span> </span>&#123;</span><br><span class=\"line\">\tfa[p] = f;</span><br><span class=\"line\">\tDep[p] = Dep[f] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\tSize[p] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> v = node[i].y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == f) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">Podfs1</span>(v, p);</span><br><span class=\"line\">\t\tSize[p] += Size[v];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Size[v] &gt; Size[Hson[p]]) Hson[p] = v;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Podfs2</span><span class=\"params\">(<span class=\"type\">int</span> p, <span class=\"type\">int</span> top)</span> </span>&#123;</span><br><span class=\"line\">\t++DFNtot;</span><br><span class=\"line\">\tTop[p] = top;</span><br><span class=\"line\">\tseg[p] = DFNtot;</span><br><span class=\"line\">\trev[DFNtot] = p;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Hson[p])</span><br><span class=\"line\">\t\t<span class=\"built_in\">Podfs2</span>(Hson[p], top);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> v = node[i].y;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (v == fa[p]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Hson[p] != v) <span class=\"built_in\">Podfs2</span>(v, v);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*--线段树--*/</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Tree</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> l, r, sum;</span><br><span class=\"line\">\t<span class=\"type\">int</span> lazy;</span><br><span class=\"line\">&#125; tree[<span class=\"number\">4</span> * _];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">lson</span><span class=\"params\">(<span class=\"type\">int</span> root)</span> </span>&#123;<span class=\"keyword\">return</span> root &lt;&lt; <span class=\"number\">1</span>;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">rson</span><span class=\"params\">(<span class=\"type\">int</span> root)</span> </span>&#123;<span class=\"keyword\">return</span> root &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Push_Up</span><span class=\"params\">(<span class=\"type\">int</span> root)</span> </span>&#123;</span><br><span class=\"line\">\ttree[root].sum = (tree[<span class=\"built_in\">lson</span>(root)].sum + tree[<span class=\"built_in\">rson</span>(root)].sum) % P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Push_Down</span><span class=\"params\">(<span class=\"type\">int</span> root)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (tree[root].lazy != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> num = tree[root].lazy;</span><br><span class=\"line\">\t\ttree[<span class=\"built_in\">lson</span>(root)].sum = (tree[<span class=\"built_in\">lson</span>(root)].sum + (tree[<span class=\"built_in\">lson</span>(root)].r - tree[<span class=\"built_in\">lson</span>(root)].l + <span class=\"number\">1</span>) * num % P) % P;</span><br><span class=\"line\">\t\ttree[<span class=\"built_in\">rson</span>(root)].sum = (tree[<span class=\"built_in\">rson</span>(root)].sum + (tree[<span class=\"built_in\">rson</span>(root)].r - tree[<span class=\"built_in\">rson</span>(root)].l + <span class=\"number\">1</span>) * num % P) % P;</span><br><span class=\"line\">\t\ttree[<span class=\"built_in\">lson</span>(root)].lazy = (tree[<span class=\"built_in\">lson</span>(root)].lazy + num) % P;</span><br><span class=\"line\">\t\ttree[<span class=\"built_in\">rson</span>(root)].lazy = (tree[<span class=\"built_in\">rson</span>(root)].lazy + num) % P;</span><br><span class=\"line\">\t\ttree[root].lazy = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Build</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> root)</span> </span>&#123;</span><br><span class=\"line\">\ttree[root].l = l;</span><br><span class=\"line\">\ttree[root].r = r;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (l == r) &#123;</span><br><span class=\"line\">\t\ttree[root].sum = val[rev[l]] % P;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">Build</span>(l, mid, <span class=\"built_in\">lson</span>(root));</span><br><span class=\"line\">\t<span class=\"built_in\">Build</span>(mid + <span class=\"number\">1</span>, r, <span class=\"built_in\">rson</span>(root));</span><br><span class=\"line\">\t<span class=\"built_in\">Push_Up</span>(root);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">Change</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R, <span class=\"type\">int</span> num)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &lt;= l &amp;&amp; r &lt;= R) &#123;</span><br><span class=\"line\">\t\ttree[root].sum += (r - l + <span class=\"number\">1</span>) * num % P;</span><br><span class=\"line\">\t\ttree[root].sum %= P;</span><br><span class=\"line\">\t\ttree[root].lazy += num % P;</span><br><span class=\"line\">\t\ttree[root].lazy %= P;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">Push_Down</span>(root);</span><br><span class=\"line\">\t<span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &lt;= mid) </span><br><span class=\"line\">\t\t<span class=\"built_in\">Change</span>(<span class=\"built_in\">lson</span>(root), l, mid, L, R, num);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (mid &lt; R)</span><br><span class=\"line\">\t\t<span class=\"built_in\">Change</span>(<span class=\"built_in\">rson</span>(root), mid + <span class=\"number\">1</span>, r, L, R, num);</span><br><span class=\"line\">\t<span class=\"built_in\">Push_Up</span>(root);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">Query</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> L, <span class=\"type\">int</span> R)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &gt; r || R &lt; l) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &lt;= l &amp;&amp; r &lt;= R) </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> tree[root].sum % P;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">Push_Down</span>(root);</span><br><span class=\"line\">\t<span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L &lt;= mid) &#123;</span><br><span class=\"line\">\t\tans += <span class=\"built_in\">Query</span>(<span class=\"built_in\">lson</span>(root), l, mid, L, R) % P;</span><br><span class=\"line\">\t\tans %= P;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (mid &lt; R) &#123;</span><br><span class=\"line\">\t\tans += <span class=\"built_in\">Query</span>(<span class=\"built_in\">rson</span>(root), mid + <span class=\"number\">1</span>, r, L, R) % P;</span><br><span class=\"line\">\t\tans %= P;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans % P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*--LCA--*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">TChange</span><span class=\"params\">(<span class=\"type\">int</span> u, <span class=\"type\">int</span> v, <span class=\"type\">int</span> num)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (Top[u] != Top[v]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Dep[Top[u]] &gt; Dep[Top[v]]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[Top[u]], seg[u], num);</span><br><span class=\"line\">\t\t\tu = fa[Top[u]];</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[Top[v]], seg[v], num);</span><br><span class=\"line\">\t\t\tv = fa[Top[v]];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Dep[u] &gt; Dep[v]) <span class=\"built_in\">swap</span>(u, v);</span><br><span class=\"line\">\t<span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[u], seg[v], num);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">TQuery</span><span class=\"params\">(<span class=\"type\">int</span> u, <span class=\"type\">int</span> v)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (Top[u] != Top[v]) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (Dep[Top[u]] &gt; Dep[Top[v]]) &#123;</span><br><span class=\"line\">\t\t\tans = ans + <span class=\"built_in\">Query</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[Top[u]], seg[u]) % P;</span><br><span class=\"line\">\t\t\tans %= P;</span><br><span class=\"line\">\t\t\tu = fa[Top[u]];</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tans = ans + <span class=\"built_in\">Query</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[Top[v]], seg[v]) % P;</span><br><span class=\"line\">\t\t\tans %= P;</span><br><span class=\"line\">\t\t\tv = fa[Top[v]];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (Dep[u] &gt; Dep[v]) <span class=\"built_in\">swap</span>(u, v);</span><br><span class=\"line\">\tans = (ans + <span class=\"built_in\">Query</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[u], seg[v]) % P) % P;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">signed</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; N &gt;&gt; M &gt;&gt; R &gt;&gt; P;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++) cin &gt;&gt; val[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t<span class=\"built_in\">add</span>(x, y);</span><br><span class=\"line\">\t\t<span class=\"built_in\">add</span>(y, x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">Podfs1</span>(R, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">Podfs2</span>(R, R);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">Build</span>(<span class=\"number\">1</span>, DFNtot, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (M--) &#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> k;</span><br><span class=\"line\">\t\tcin &gt;&gt; k;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (k == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x, y, z;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">TChange</span>(x, y, z);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">TQuery</span>(x, y) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k == <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x, z;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x &gt;&gt; z;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">Change</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[x], seg[x] + Size[x] - <span class=\"number\">1</span>, z);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (k == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x;</span><br><span class=\"line\">\t\t\tcin &gt;&gt; x;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; <span class=\"built_in\">Query</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, DFNtot, seg[x], seg[x] + Size[x] - <span class=\"number\">1</span>) &lt;&lt; <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"闲话11.8","date":"2023-11-08T12:14:14.000Z","photos":["https://pic.acerkaio.top/img/Elaina/%E3%81%82%E3%81%9A%E3%83%BC%E3%82%8B/Flower/73247150_p0.jpg"],"cover":["/img/xianhua.jpeg"],"banner":{"type":"img","bgurl":"https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg","banner_text":"Hola! This is a article about my life..."},"toc":true,"_content":"\n### 有人会看吗？\n\n---\n\n我的图片库: [pic.acerkaio.top](https://pic.acerkaio.top/)\n\n---\n\n小说在看《魔女之旅 14卷》\n\n---\n\n挂个 [CSP2023游记](https://www.luogu.com.cn/blog/514850/csp-2023-you-ji)。\n\n---\n\n### 头图：\n\n\n![again](404)","source":"_posts/闲话11-8.md","raw":"---\ntitle: 闲话11.8\ndate: 2023-11-08 20:14:14\ntags: 闲话\ncategories: 闲话\nphotos: https://pic.acerkaio.top/img/Elaina/%E3%81%82%E3%81%9A%E3%83%BC%E3%82%8B/Flower/73247150_p0.jpg\ncover: [/img/xianhua.jpeg]\nbanner:\n  type: img\n  bgurl: https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg\n  banner_text: Hola! This is a article about my life...\ntoc: true\n---\n\n### 有人会看吗？\n\n---\n\n我的图片库: [pic.acerkaio.top](https://pic.acerkaio.top/)\n\n---\n\n小说在看《魔女之旅 14卷》\n\n---\n\n挂个 [CSP2023游记](https://www.luogu.com.cn/blog/514850/csp-2023-you-ji)。\n\n---\n\n### 头图：\n\n\n![again](404)","slug":"闲话11-8","published":1,"updated":"2024-07-18T09:01:11.874Z","comments":1,"layout":"post","link":"","_id":"clz0heoo3000u4mu877prg3t9","content":"<h3 id=\"有人会看吗？\"><a href=\"#有人会看吗？\" class=\"headerlink\" title=\"有人会看吗？\"></a>有人会看吗？</h3><hr>\n<p>我的图片库: <a href=\"https://pic.acerkaio.top/\">pic.acerkaio.top</a></p>\n<hr>\n<p>小说在看《魔女之旅 14卷》</p>\n<hr>\n<p>挂个 <a href=\"https://www.luogu.com.cn/blog/514850/csp-2023-you-ji\">CSP2023游记</a>。</p>\n<hr>\n<h3 id=\"头图：\"><a href=\"#头图：\" class=\"headerlink\" title=\"头图：\"></a>头图：</h3><p><img src=\"/404\" alt=\"again\"  data-tag='post-image' loading=\"lazy\" onerror='this.onerror=null;this.src=\"/img/404.jpg\"'></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"有人会看吗？\"><a href=\"#有人会看吗？\" class=\"headerlink\" title=\"有人会看吗？\"></a>有人会看吗？</h3><hr>\n<p>我的图片库: <a href=\"https://pic.acerkaio.top/\">pic.acerkaio.top</a></p>\n<hr>\n<p>小说在看《魔女之旅 14卷》</p>\n<hr>\n<p>挂个 <a href=\"https://www.luogu.com.cn/blog/514850/csp-2023-you-ji\">CSP2023游记</a>。</p>\n<hr>\n<h3 id=\"头图：\"><a href=\"#头图：\" class=\"headerlink\" title=\"头图：\"></a>头图：</h3><p><img src=\"/404\" alt=\"again\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clz0heonm00014mu88mjegtso","category_id":"clz0heonq00044mu8evz11ce7","_id":"clz0heony000i4mu81bjihwq4"},{"post_id":"clz0heonp00034mu83rifh0bo","category_id":"clz0heonv000c4mu81snn0dkr","_id":"clz0heoo1000o4mu867l91a76"},{"post_id":"clz0heonz000l4mu8651k0wit","category_id":"clz0heonv000c4mu81snn0dkr","_id":"clz0heoo4000v4mu859y8ao2t"},{"post_id":"clz0heons00074mu8f62k3j63","category_id":"clz0heony000j4mu810sm1rnd","_id":"clz0heoo5000z4mu82rkk638e"},{"post_id":"clz0heoo0000n4mu8hrr1a3pd","category_id":"clz0heony000j4mu810sm1rnd","_id":"clz0heoo500114mu82i9wauf3"},{"post_id":"clz0heoo2000s4mu881b673ym","category_id":"clz0heony000j4mu810sm1rnd","_id":"clz0heoo600154mu8ab7bdkbq"},{"post_id":"clz0heont00094mu84y5wccq2","category_id":"clz0heonv000c4mu81snn0dkr","_id":"clz0heoo600174mu8goae2h4b"},{"post_id":"clz0heonv000b4mu8ah9v89wi","category_id":"clz0heonv000c4mu81snn0dkr","_id":"clz0heoo6001a4mu81zdnaa8t"},{"post_id":"clz0heony000h4mu8de7817vn","category_id":"clz0heoo500124mu8f23xab9w","_id":"clz0heoo7001c4mu8aum2bq4z"},{"post_id":"clz0heoo3000u4mu877prg3t9","category_id":"clz0heoo600184mu8a5j4547f","_id":"clz0heoo7001e4mu8ar03hmo1"}],"PostTag":[{"post_id":"clz0heonm00014mu88mjegtso","tag_id":"clz0heonr00054mu87odyapqe","_id":"clz0heonw000e4mu8e4r10nw9"},{"post_id":"clz0heonp00034mu83rifh0bo","tag_id":"clz0heonv000d4mu8gxxdg2dh","_id":"clz0heoo0000m4mu887ht4974"},{"post_id":"clz0heonz000l4mu8651k0wit","tag_id":"clz0heonv000d4mu8gxxdg2dh","_id":"clz0heoo1000r4mu8f6d19p09"},{"post_id":"clz0heons00074mu8f62k3j63","tag_id":"clz0heonz000k4mu82gq95d1y","_id":"clz0heoo3000t4mu8ceqa28sr"},{"post_id":"clz0heoo0000n4mu8hrr1a3pd","tag_id":"clz0heonz000k4mu82gq95d1y","_id":"clz0heoo4000y4mu81tccgsr0"},{"post_id":"clz0heoo2000s4mu881b673ym","tag_id":"clz0heonz000k4mu82gq95d1y","_id":"clz0heoo500104mu8d2aghdtu"},{"post_id":"clz0heont00094mu84y5wccq2","tag_id":"clz0heonv000d4mu8gxxdg2dh","_id":"clz0heoo600144mu86flmaqtl"},{"post_id":"clz0heonv000b4mu8ah9v89wi","tag_id":"clz0heonv000d4mu8gxxdg2dh","_id":"clz0heoo600164mu83qjpfmf2"},{"post_id":"clz0heony000h4mu8de7817vn","tag_id":"clz0heoo500134mu858o6enrt","_id":"clz0heoo7001b4mu8fy9bg8zh"},{"post_id":"clz0heoo3000u4mu877prg3t9","tag_id":"clz0heoo600194mu8e91t04bf","_id":"clz0heoo7001d4mu88ers7rq5"}],"Tag":[{"name":"题解","_id":"clz0heonr00054mu87odyapqe"},{"name":"记录","_id":"clz0heonv000d4mu8gxxdg2dh"},{"name":"学习笔记","_id":"clz0heonz000k4mu82gq95d1y"},{"name":"创作","_id":"clz0heoo500134mu858o6enrt"},{"name":"闲话","_id":"clz0heoo600194mu8e91t04bf"}]}}